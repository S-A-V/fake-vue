{"version":3,"file":"vue.js","sources":["../src/shared/util.js","../src/shared/constants.js","../src/core/util/options.js","../src/core/util/index.js","../src/core/instance/lifecycle.js","../src/core/util/next-tick.js","../src/core/observer/scheduler.js","../src/core/observer/dep.js","../src/core/observer/watcher.js","../src/core/observer/array.js","../src/core/observer/index.js","../src/core/instance/state.js","../src/core/vdom/vnode.js","../src/core/vdom/create-component.js","../src/core/vdom/create-element.js","../src/core/instance/render-helpers/index.js","../src/core/instance/render.js","../src/core/instance/init.js","../src/core/instance/index.js","../src/core/global-api/mixin.js","../src/core/global-api/extend.js","../src/core/global-api/assets.js","../src/core/global-api/index.js","../src/core/index.js","../src/platforms/util/index.js","../src/core/vdom/patch.js","../src/platforms/runtime/patch.js","../src/platforms/runtime/index.js","../src/compiler/parser/html-parser.js","../src/compiler/parser/index.js","../src/compiler/codegen/index.js","../src/compiler/index.js","../src/platforms/entry-runtime-with-compiler.js"],"sourcesContent":["/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nexport function isObject(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Mix properties into target object.\n */\nexport function extend(to, _from) {\n  for (const key in _from) {\n    to[key] = _from[key];\n  }\n  return to;\n}\n\nexport function noop() {}\n","export const SSR_ATTR = 'data-server-rendered';\r\n\r\nexport const ASSET_TYPES = ['component', 'directive', 'filter'];\r\n\r\nexport const LIFECYCLE_HOOKS = [\r\n  'beforeCreate',\r\n  'created',\r\n  'beforeMount',\r\n  'mounted',\r\n  'beforeUpdate',\r\n  'updated',\r\n  'beforeDestroy',\r\n  'destroyed',\r\n  // 'activated',\r\n  // 'deactivated',\r\n  // 'errorCaptured',\r\n  // 'serverPrefetch',\r\n];\r\n","import { ASSET_TYPES, LIFECYCLE_HOOKS } from '../../shared/constants';\nimport { extend } from '../../shared/util';\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\n// 合并策略\nconst strats = {};\n\n/**\n * Hooks and props are merged as arrays.\n */\n// 生命周期合并策略\nfunction mergeHook(parentVal, childVal) {\n  if (childVal) {\n    if (parentVal) {\n      return parentVal.concat(childVal);\n    } else {\n      return Array.isArray(childVal) ? childVal : [childVal];\n    }\n  } else {\n    return parentVal;\n  }\n}\n\nLIFECYCLE_HOOKS.forEach((hook) => {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets(parentVal, childVal) {\n  /**\n   * 如果有同名的全局组件和自定义的局部组件\n   * parentVal 代表全局组件，childVal 代表自定义组件\n   *\n   * 首先会查找局部组件，有就使用，没有就从原型继承全局组件。res.__proto__ === parentVal\n   */\n  const res = Object.create(parentVal);\n  if (childVal) {\n    return extend(res, childVal);\n  } else {\n    return res;\n  }\n}\n\n// 组件/指令/过滤器的合并策略\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nexport function mergeOptions(parent, child) {\n  const options = {};\n  let key;\n  // 遍历父亲\n  for (key in parent) {\n    mergeFiled(key);\n  }\n  // 父亲没有但儿子有\n  for (key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeFiled(key);\n    }\n  }\n  function mergeFiled(key) {\n    // 真正合并字段方法\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key]);\n    } else {\n      // 默认策略\n      options[key] = child[key] ? child[key] : parent[key];\n    }\n  }\n  return options;\n}\n","export * from '../../shared/util';\r\nexport * from './options';\r\n\r\nexport function isReservedTag(tagName) {\r\n  // 定义常见标签\r\n  const str =\r\n    'html,body,base,head,link,meta,style,title,' +\r\n    'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\r\n    'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\r\n    'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\r\n    's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\r\n    'embed,object,param,source,canvas,script,noscript,del,ins,' +\r\n    'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\r\n    'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\r\n    'output,progress,select,textarea,' +\r\n    'details,dialog,menu,menuitem,summary,' +\r\n    'content,element,shadow,template,blockquote,iframe,tfoot';\r\n  const map = {};\r\n  const list = str.split(',');\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true;\r\n  }\r\n  return map[tagName];\r\n}\r\n","import Watcher from '../observer/watcher';\r\n\r\nexport function lifecycleMixin(Vue) {\r\n  // 把 _update 挂载到 Vue 的原型\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    // 缓存上一次的 vnode\r\n    const prevVnode = vm._vnode;\r\n    vm._vnode = vnode;\r\n    if (!prevVnode) {\r\n      // patch 是渲染 vnode 为真实 dom 的核心\r\n      // 初次渲染 vm._vnode 肯定不存在，要通过虚拟节点渲染出真实的 dom，赋值给 $el 属性\r\n      vm.$el = vm.__patch__(vm.$el, vnode);\r\n    } else {\r\n      // 更新时把上次的 vnode 和这次更新的 vnode 传进去，进行 diff 算法\r\n      vm.$el = vm.__patch__(prevVnode, vnode);\r\n    }\r\n  };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  /**\r\n   * 上一步模板编译，解析生成了 render 函数\r\n   * 下一步就是执行 vm._render() 方法，调用生成的 render 函数，生成虚拟 dom\r\n   * 最后使用 vm._update() 方法把虚拟 dom 渲染到页面\r\n   */\r\n\r\n  // 真实的 el 赋值给实例的 $el 属性\r\n  vm.$el = el;\r\n  callHook(vm, 'beforeMount');\r\n\r\n  let updateComponent = () => {\r\n    // _update 和 _render 方法都是挂载在 Vue 原型上的方法，类似 _init\r\n    vm._update(vm._render());\r\n  };\r\n\r\n  // 注册一个渲染 watcher，执行 vm._update(vm._render()) 方法渲染视图\r\n  new Watcher(\r\n    vm,\r\n    updateComponent,\r\n    () => {\r\n      callHook(vm, 'beforeUpdate');\r\n    },\r\n    true,\r\n    true /* isRenderWatcher */\r\n  );\r\n\r\n  callHook(vm, 'mounted');\r\n  return vm;\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  const handlers = vm.$options[hook];\r\n  // 依次执行生命周期对应的方法\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      // 生命周期里面的 this 指向当前实例\r\n      handlers[i].call(vm);\r\n    }\r\n  }\r\n}\r\n","const callbacks = [];\r\nlet pending = false;\r\n\r\nfunction flushCallbacks() {\r\n  // 把标志还原为 false\r\n  pending = false;\r\n  // 依次执行回调\r\n  for (let i = 0; i < callbacks.length; i++) {\r\n    callbacks[i]();\r\n  }\r\n}\r\n\r\n// 定义异步方法，采用优雅降级\r\nlet timerFunc;\r\n\r\nif (typeof Promise !== 'undefined') {\r\n  // 如果支持 promise\r\n  const p = Promise.resolve();\r\n  timerFunc = () => {\r\n    p.then(flushCallbacks);\r\n  };\r\n} else if (typeof MutationObserver !== 'undefined') {\r\n  // MutationObserver 主要是监听 dom 变化，也是一个异步方法\r\n  let counter = 1;\r\n  const observer = new MutationObserver(flushCallbacks);\r\n  const textNode = document.createTextNode(String(counter));\r\n  observer.observe(textNode, {\r\n    characterData: true,\r\n  });\r\n  timerFunc = () => {\r\n    counter = (counter + 1) % 2;\r\n    textNode.data = String(counter);\r\n  };\r\n} else if (typeof setImmediate !== 'undefined') {\r\n  // Fallback to setImmediate.\r\n  // Technically it leverages the (macro) task queue,\r\n  // but it is still a better choice than setTimeout.\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks);\r\n  };\r\n} else {\r\n  // Fallback to setTimeout.\r\n  // 最后降级采用 setTimeout\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks, 0);\r\n  };\r\n}\r\n\r\nexport function nextTick(cb) {\r\n  // 除了渲染 watcher，还有用户自己手动调用的 nextTick，一起被收集到数组\r\n  callbacks.push(cb);\r\n  if (!pending) {\r\n    // 如果多次调用 nextTick，只会执行一次异步，等异步队列清空之后再把标志变为 false\r\n    pending = true;\r\n    timerFunc();\r\n  }\r\n}\r\n","import { callHook } from '../instance/lifecycle';\r\nimport { nextTick } from '../util/next-tick';\r\n\r\nlet queue = []; // Array<Watcher>\r\nlet has = {}; // { [key: number]: ?true }\r\n\r\n/**\r\n * Reset the scheduler's state.\r\n */\r\nfunction resetSchedulerState() {\r\n  queue.length = 0;\r\n  has = {};\r\n}\r\n\r\n/**\r\n * Flush both queues and run the watchers.\r\n */\r\nfunction flushSchedulerQueue() {\r\n  let watcher;\r\n\r\n  // do not cache length because more watchers might be pushed\r\n  // as we run existing watchers\r\n  for (let index = 0; index < queue.length; index++) {\r\n    watcher = queue[index];\r\n    // 调用 watcher 的 run 方法，执行真正的更新操作\r\n    watcher.run();\r\n  }\r\n\r\n  // keep copies of post queues before resetting state\r\n  const updatedQueue = queue.slice();\r\n\r\n  // 执行完之后清空队列\r\n  resetSchedulerState();\r\n\r\n  callUpdatedHooks(updatedQueue);\r\n}\r\n\r\nfunction callUpdatedHooks(queue) {\r\n  debugger;\r\n  let i = queue.length;\r\n  while (i--) {\r\n    const watcher = queue[i];\r\n    const vm = watcher.vm;\r\n    if (vm._watcher === watcher) {\r\n      callHook(vm, 'updated');\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Push a watcher into the watcher queue.\r\n * Jobs with duplicate IDs will be skipped unless it's\r\n * pushed when the queue is being flushed.\r\n */\r\n// 实现异步队列机制\r\nexport function queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n  // watcher 去重\r\n  if (has[id] == null) {\r\n    has[id] = true;\r\n    // 同步代码执行，把全部的 watcher 都放到队列里面\r\n    queue.push(watcher);\r\n    // 进行异步调用\r\n    nextTick(flushSchedulerQueue);\r\n  }\r\n}\r\n","/**\r\n * dep 和 watcher 是多对多的关系\r\n * 每个属性都有自己的 dep\r\n */\r\n\r\n// Dep 实例的唯一标识\r\nlet id = 0;\r\n\r\n/**\r\n * A dep is an observable that can have multiple\r\n * directives subscribing to it.\r\n */\r\nexport default class Dep {\r\n  constructor() {\r\n    this.id = id++;\r\n    this.subs = []; // 存放 watcher 的容器\r\n  }\r\n\r\n  addSub(watcher) {\r\n    // 把 watcher 加入到自身的 subs 容器\r\n    this.subs.push(watcher);\r\n  }\r\n\r\n  depend() {\r\n    // 如果当前存在 watcher\r\n    if (Dep.target) {\r\n      // 把自身（Dep 实例）存放在 watcher 里面\r\n      Dep.target.addDep(this);\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    // stabilize the subscriber list first\r\n    const subs = this.subs.slice();\r\n    // 依次执行 subs 里面的 watcher 更新方法\r\n    for (let i = 0, l = subs.length; i < l; i++) {\r\n      subs[i].update();\r\n    }\r\n  }\r\n}\r\n\r\n// The current target watcher being evaluated.\r\n// This is globally unique because only one watcher\r\n// can be evaluated at a time.\r\n// Dep.target 默认为 null\r\nDep.target = null;\r\n// 栈结构用来存watcher\r\nconst targetStack = [];\r\n\r\nexport function pushTarget(watcher) {\r\n  targetStack.push(watcher);\r\n  // Dep.target 指向当前 watcher\r\n  Dep.target = watcher;\r\n}\r\n\r\nexport function popTarget() {\r\n  // 当前 watcher 出栈\r\n  targetStack.pop();\r\n  // 拿到上一个 watcher\r\n  Dep.target = targetStack[targetStack.length - 1];\r\n}\r\n","import { isObject } from '../util/index';\r\nimport { queueWatcher } from './scheduler';\r\nimport { pushTarget, popTarget } from './dep';\r\n\r\n// 全局变量，每次 new Watcher 都会自增\r\nlet id = 0;\r\n\r\n/**\r\n * A watcher parses an expression, collects dependencies,\r\n * and fires callback when the expression value changes.\r\n * This is used for both the $watch() api and directives.\r\n */\r\nexport default class Watcher {\r\n  constructor(vm, exprOrFn, cb, options, isRenderWatcher) {\r\n    this.vm = vm;\r\n    if (isRenderWatcher) {\r\n      vm._watcher = this;\r\n    }\r\n    if (options) {\r\n      this.user = !!options.user; // 标识用户 watcher\r\n      this.lazy = !!options.lazy; // 标识计算属性 watcher\r\n    } else {\r\n      this.user = this.lazy = false;\r\n    }\r\n    this.options = options; // 额外的选项，true 代表渲染 watcher\r\n    this.cb = cb; // 回调函数，比如在 watcher 更新之前可以执行 beforeUpdate 方法\r\n    this.id = id++; // watcher 的唯一标识\r\n    this.dirty = this.lazy; // dirty，可变。表示计算 watcher 是否需要重新计算（执行用户定义的方法）\r\n    this.deps = []; // 存放 dep 的容器\r\n    this.depIds = new Set(); // 用来去重 dep\r\n    this.exprOrFn = exprOrFn;\r\n    // 如果表达式是一个函数\r\n    if (typeof exprOrFn === 'function') {\r\n      this.getter = exprOrFn;\r\n    } else {\r\n      // 用户 watcher 传过来的可能是一个字符串，类似 a.b.c.d\r\n      this.getter = function () {\r\n        let obj = vm;\r\n        let segments = exprOrFn.split('.');\r\n        for (let i = 0; i < segments.length; i++) {\r\n          obj = obj[segments[i]]; // vm.a.b.c.d\r\n        }\r\n        return obj;\r\n      };\r\n    }\r\n    // 非计算属性实例化就会默认调用 get 方法进行取值，保留结果\r\n    this.value = this.lazy ? undefined : this.get();\r\n  }\r\n\r\n  /**\r\n   * Evaluate the getter, and re-collect dependencies.\r\n   */\r\n  get() {\r\n    // 在调用方法之前先把当前 watcher 实例推到全局 Dep.target 上\r\n    pushTarget(this);\r\n    let value;\r\n    const vm = this.vm;\r\n    /**\r\n     * 如果是渲染 watcher，相当于执行 vm._update(vm._render())\r\n     * render 函数执行的时候会取值，从而实现依赖收集\r\n     */\r\n    value = this.getter.call(vm);\r\n    // 在调用方法之后把当前 watcher 实例从全局 Dep.target 移除\r\n    popTarget();\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * 把 dep 放到 deps 里面，同时保证同一个 dep 只被保存到 watcher 一次\r\n   * 同样，同一个 watcher 也只会保存在 dep 一次\r\n   */\r\n  addDep(dep) {\r\n    const id = dep.id;\r\n    if (!this.depIds.has(id)) {\r\n      this.depIds.add(id);\r\n      this.deps.push(dep);\r\n      // 调用 dep 的 addSub 方法，把自己（watcher 实例）添加到 dep 的 subs 容器里\r\n      dep.addSub(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscriber interface.\r\n   * Will be called when a dependency changes.\r\n   */\r\n  // 简单执行一下 get 方法，之后涉及到计算属性就不一样了\r\n  update() {\r\n    // 计算属性依赖的值发生变化，只需要把 dirty 置为 true，下次访问到了重新计算\r\n    if (this.lazy) {\r\n      this.dirty = true;\r\n    } else {\r\n      // 每次 watcher 进行更新的时候，可以让他们先缓存起来，之后再一起调用\r\n      // 异步队列机制\r\n      queueWatcher(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scheduler job interface.\r\n   * Will be called by the scheduler.\r\n   */\r\n  run() {\r\n    const newVal = this.get(); // 新值\r\n    const oldVal = this.value; // 老值\r\n    this.value = newVal;\r\n    if (this.user) {\r\n      if (newVal !== oldVal || isObject(newVal)) {\r\n        this.cb.call(this.vm, newVal, oldVal);\r\n      }\r\n    } else {\r\n      // 渲染 watcher\r\n      this.cb.call(this.vm);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evaluate the value of the watcher.\r\n   * This only gets called for lazy watchers.\r\n   */\r\n  evaluate() {\r\n    this.value = this.get();\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Depend on all deps collected by this watcher.\r\n   */\r\n  depend() {\r\n    // 计算属性的 watcher 存储了依赖项的 dep\r\n    let i = this.deps.length;\r\n    while (i--) {\r\n      // 调用依赖项的 dep 去收集渲染 watcher\r\n      this.deps[i].depend();\r\n    }\r\n  }\r\n}\r\n","// 保留数组原型\r\nconst arrayProto = Array.prototype;\r\n// 然后将 arrayMethods 继承自数组原型\r\n// 这里是面向切片编程思想（AOP），不破坏封装的前提下，动态地扩展功能\r\nexport const arrayMethods = Object.create(arrayProto);\r\n\r\nconst methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];\r\n\r\n/**\r\n * Intercept mutating methods and emit events\r\n */\r\nmethodsToPatch.forEach(function (method) {\r\n  // cache original method\r\n  const original = arrayProto[method];\r\n  arrayMethods[method] = function (...args) {\r\n    // 保留原型方法的执行结果\r\n    const result = original.apply(this, args);\r\n    // this 代表的是数据本身。比如数据是 { a: [1, 2, 3] }，那么使用 a.push(4)，this 就是 a，ob 就是 a.__ob__\r\n    // 这个属性代表该数据已经被响应式观测过了，__ob__ 对象指的就是 Observer 实例\r\n    const ob = this.__ob__;\r\n    let inserted;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2);\r\n      default:\r\n        break;\r\n    }\r\n    // 对新增的每一项进行观测\r\n    if (inserted) ob.observeArray(inserted);\r\n    // 派发更新。在 get 的时候判断如果属性的值还是对象，那么就在 Observer 实例的 dep 收集依赖\r\n    // 所以这里是一一对应的，可以直接更新\r\n    ob.dep.notify();\r\n    return result;\r\n  };\r\n});\r\n","import Dep from './dep';\r\nimport { arrayMethods } from './array';\r\n\r\nclass Observer {\r\n  constructor(value) {\r\n    this.value = value;\r\n    this.dep = new Dep();\r\n\r\n    // 当数组使用 7 种重写方法时，是无法进行依赖收集和派发更新的，此属性主要辅助数组更新\r\n    Object.defineProperty(value, '__ob__', {\r\n      value: this, // Observer 的实例\r\n      enumerable: false, // 不可枚举\r\n      writable: true,\r\n      configurable: true,\r\n    });\r\n\r\n    if (Array.isArray(value)) {\r\n      // 这里对数组做了额外判断\r\n      // 通过重写数组原型方法来对数组的 7 种方法进行拦截\r\n      protoAugment(value, arrayMethods);\r\n      // 如果数组里面还包含数组，递归判断\r\n      this.observeArray(value);\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Walk through all properties and convert them into\r\n   * getter/setters. This method should only be called when\r\n   * value type is Object.\r\n   */\r\n  walk(obj) {\r\n    // 观测对象上的所有属性\r\n    const keys = Object.keys(obj);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      let key = keys[i];\r\n      let value = obj[key];\r\n      defineReactive(obj, key, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Observe a list of Array items.\r\n   */\r\n  observeArray(items) {\r\n    for (let i = 0; i < items.length; i++) {\r\n      observe(items[i]);\r\n    }\r\n  }\r\n}\r\n\r\n// helpers\r\n\r\n/**\r\n * Augment a target Object or Array by intercepting\r\n * the prototype chain using __proto__\r\n */\r\nfunction protoAugment(target, src) {\r\n  target.__proto__ = src;\r\n}\r\n\r\n/**\r\n * Attempt to create an observer instance for a value,\r\n * returns the new observer if successfully observed,\r\n * or the existing observer if the value already has one.\r\n */\r\nexport function observe(value) {\r\n  // 递归进行属性劫持\r\n  if (typeof value !== 'object' || value === null) {\r\n    return;\r\n  }\r\n  return new Observer(value);\r\n}\r\n\r\n/**\r\n * Define a reactive property on an Object.\r\n */\r\n// 数据劫持核心\r\nfunction defineReactive(obj, key, value) {\r\n  // 为每个属性实例化一个 Dep\r\n  let dep = new Dep();\r\n\r\n  // 递归关键，如果 value 是对象，会继续走一遍 defineReactive，层层遍历直到 value 不是对象为止\r\n  let childOb = observe(value);\r\n  Object.defineProperty(obj, key, {\r\n    enumerable: true,\r\n    configurable: true,\r\n    get: function reactiveGetter() {\r\n      // 依赖收集。取值的时候把 watcher 收集到 dep 里面\r\n      if (Dep.target) {\r\n        // 如果有 watcher，dep 就会保存 watcher；同时 watcher 也会保存 dep\r\n        dep.depend();\r\n        // 属性的值依然是一个对象，包含数组和对象。childOb 指代的就是 Observer 实例对象，里面的 dep 进行依赖收集\r\n        // 比如，{ a: [1, 2, 3] } 的属性 a 对应的值是一个数组，观测数组的返回值就是对应数组的 Observer 实例对象\r\n        if (childOb) {\r\n          childOb.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            // 如果数据结构类似 { a: [1, 2, [3, 4, [5, 6]]] } 这种多层嵌套数组\r\n            // 那么访问 a 的时候，只是对第一层的数组进行了依赖收集。里面的数组因为没有访问到，所以无法收集依赖\r\n            // 如果改变了 a 里面第二层数组的值，需要更新页面，所以需要对数组递归进行依赖收集\r\n            debugger;\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set: function reactiveSetter(newValue) {\r\n      if (newValue === value) {\r\n        return;\r\n      }\r\n      value = newValue;\r\n      // 如果新值也是对象，需要进行观测\r\n      childOb = observe(newValue);\r\n      // 派发更新，通知渲染 watcher 去更新\r\n      dep.notify();\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Collect dependencies on array elements when the array is touched, since\r\n * we cannot intercept array element access like property getters.\r\n */\r\n// 递归收集数组依赖\r\nfunction dependArray(value) {\r\n  for (let e, i = 0, l = value.length; i < l; i++) {\r\n    e = value[i];\r\n    // e.__ob__ 代表 e 已经被响应式观测了，但是没有收集依赖，所以把它们收集到自己的 Observer 实例的 dep 里面\r\n    e && e.__ob__ && e.__ob__.dep.depend();\r\n    // 如果数组里面还有数组，递归收集依赖\r\n    if (Array.isArray(e)) {\r\n      dependArray(e);\r\n    }\r\n  }\r\n}\r\n","import Watcher from '../observer/watcher';\r\nimport Dep from '../observer/dep';\r\nimport { observe } from '../observer/index';\r\nimport { noop } from '../util/index';\r\n\r\nconst sharedPropertyDefinition = {\r\n  enumerable: true,\r\n  configurable: true,\r\n  get: noop,\r\n  set: noop,\r\n};\r\n\r\nexport function proxy(target, sourceKey, key) {\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      return target[sourceKey][key];\r\n    },\r\n    set(val) {\r\n      target[sourceKey][key] = val;\r\n    },\r\n  });\r\n}\r\n\r\n// 初始化状态，顺序依次是：prop > methods > data > computed > watch\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.props) initProps(vm, opts.props);\r\n  if (opts.methods) initMethods(vm, opts.methods);\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) initComputed(vm, opts.computed);\r\n  if (opts.watch) {\r\n    initWatch(vm, opts.watch);\r\n  }\r\n}\r\n\r\nfunction initProps() {}\r\n\r\n// 初始化 data 数据\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  // 实例的 _data 属性就是传入的 data\r\n  // 组件 data 推荐使用函数，防止数据在组件之间共享\r\n  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};\r\n\r\n  // 把 data 数据代理到 vm，也就是 Vue 实例上面。我们可以使用 this.a 来访问 this._data.a\r\n  for (let key in data) {\r\n    proxy(vm, `_data`, key);\r\n  }\r\n\r\n  // 对数据进行观测（响应式数据核心）\r\n  observe(data, true /* asRootData */);\r\n}\r\n\r\nfunction getData(data, vm) {\r\n  try {\r\n    return data.call(vm, vm);\r\n  } catch (e) {\r\n    return {};\r\n  }\r\n}\r\n\r\nconst computedWatcherOptions = { lazy: true };\r\n\r\nfunction initComputed(vm, computed) {\r\n  // 用来存放计算 watcher\r\n  const watchers = (vm._computedWatchers = {});\r\n\r\n  for (let key in computed) {\r\n    // 获取用户定义的计算属性\r\n    const userDef = computed[key];\r\n    const getter = typeof userDef === 'function' ? userDef : userDef.get;\r\n    // 创建计算属性 watcher\r\n    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\r\n    defineComputed(vm, key, userDef);\r\n  }\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n  // 如果是函数\r\n  if (typeof userDef === 'function') {\r\n    sharedPropertyDefinition.get = createComputedGetter(key);\r\n    sharedPropertyDefinition.set = noop;\r\n  } else {\r\n    sharedPropertyDefinition.get = createComputedGetter(key);\r\n    sharedPropertyDefinition.set = userDef.set || noop;\r\n  }\r\n  Object.defineProperty(target, key, sharedPropertyDefinition);\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n  return function computedGetter() {\r\n    // 获取对应的计算属性 watcher\r\n    const watcher = this._computedWatchers && this._computedWatchers[key];\r\n    if (watcher) {\r\n      // 计算属性取值的时候，如果是脏的，需要重新求值\r\n      if (watcher.dirty) {\r\n        watcher.evaluate();\r\n      }\r\n      // 如果 Dep 还存在 target，这个时候一般为渲染 watcher，计算属性依赖的数据也需要收集\r\n      if (Dep.target) {\r\n        watcher.depend();\r\n      }\r\n      return watcher.value;\r\n    }\r\n  };\r\n}\r\n\r\nfunction initMethods() {}\r\n\r\n// 初始化 watch\r\nfunction initWatch(vm, watch) {\r\n  for (let key in watch) {\r\n    const handler = watch[key];\r\n    // 可能是数组/对象/函数/字符串\r\n    if (Array.isArray(handler)) {\r\n      handler.forEach((item) => {\r\n        createWatcher(vm, key, item);\r\n      });\r\n    } else {\r\n      createWatcher(vm, key, handler);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher(vm, expOrFn, handler, options = {}) {\r\n  if (typeof handler === 'object') {\r\n    // 保存用户传入的对象\r\n    options = handler;\r\n    // 是函数\r\n    handler = handler.handler;\r\n  }\r\n  if (typeof handler === 'string') {\r\n    handler = vm[handler];\r\n  }\r\n  return vm.$watch(expOrFn, handler, options);\r\n}\r\n\r\nexport function stateMixin(Vue) {\r\n  Vue.prototype.$watch = function (expOrFn, cb, options = {}) {\r\n    const vm = this;\r\n    options.user = true;\r\n    // 这里表示是一个用户 watcher\r\n    let watcher = new Watcher(vm, expOrFn, cb, options);\r\n    if (options.immediate) {\r\n      cb();\r\n    }\r\n  };\r\n}\r\n","// 定义 VNode 类\nexport default class VNode {\n  constructor(tag, data, children, text, componentOptions) {\n    this.tag = tag;\n    this.data = data;\n    this.children = children;\n    this.text = text;\n    this.key = data && data.key;\n    this.componentOptions = componentOptions;\n    this.parent = undefined;\n  }\n}\n\nexport function createTextVNode(text) {\n  return new VNode(undefined, undefined, undefined, text);\n}\n","import VNode from './vnode';\nimport { isObject } from '../util/index';\n\nexport function createComponent(Ctor, data, context, children, tag) {\n  const baseCtor = context.$options._base;\n\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  data = data || {};\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  // 组件 vnode（占位符 vnode），$vnode\n  const name = tag;\n  const vnode = new VNode(`vue-component-${Ctor.cid}-${name}`, data, undefined, undefined, {\n    Ctor,\n    tag,\n    children,\n  });\n\n  return vnode;\n}\n\nfunction installComponentHooks(data) {\n  // 声明组件自己内部的生命周期\n  data.hook = {\n    // 组件创建过程中，自身的初始化方法\n    init(vnode) {\n      debugger;\n      // 实例化组件\n      const child = (vnode.componentInstance = new vnode.componentOptions.Ctor({ _isComponent: true }));\n      // 因为没有传入 el 属性，需要手动挂载。为了在组件实例上面增加 $el 方法，可用于生成组件的真实渲染节点\n      child.$mount();\n    },\n  };\n}\n","import VNode from '../vdom/vnode';\r\nimport { createComponent } from './create-component';\r\nimport { isReservedTag } from '../util/index';\r\n\r\n// 创建元素 vnode，等同于 render 函数里的 h => h(App)\r\nexport function createElement(context, tag, data = {}, ...children) {\r\n  let vnode;\r\n  if (isReservedTag(tag)) {\r\n    // platform built-in elements\r\n    // 如果是普通 HTML 标签\r\n    vnode = new VNode(tag, data, children);\r\n  } else {\r\n    // 否则就是组件\r\n    // 获取组件的构造函数\r\n    let Ctor = context.$options.components[tag];\r\n    vnode = createComponent(Ctor, data, context, children, tag);\r\n  }\r\n  return vnode;\r\n}\r\n","import { createElement } from '../../vdom/create-element';\nimport { createTextVNode } from '../../vdom/vnode';\n\n// render 函数里的 _c、_s、_v 方法需要定义\nexport function installRenderHelpers(target) {\n  // 创建虚拟 dom 元素\n  target._c = function (...args) {\n    return createElement(this, ...args);\n  };\n\n  // toString，如果模板里是一个对象，需要 JSON.stringify\n  target._s = function (val) {\n    return val === null ? '' : typeof val === 'object' ? JSON.stringify(val) : val;\n  };\n\n  // 创建虚拟 dom 文本\n  target._v = createTextVNode;\n}\n","import { nextTick } from '../util/next-tick';\r\nimport { createElement } from '../vdom/create-element';\r\nimport { installRenderHelpers } from './render-helpers/index';\r\n\r\nexport function initRender(vm) {\r\n  // normalization is always applied for the public version, used in\r\n  // user-written render functions.\r\n  vm.$createElement = (a, b, c, d) => createElement(vm, a, b, c, d);\r\n}\r\n\r\nexport function renderMixin(Vue) {\r\n  installRenderHelpers(Vue.prototype);\r\n\r\n  // 挂载在原型上的 nextTick 方法\r\n  Vue.prototype.$nextTick = nextTick;\r\n\r\n  Vue.prototype._render = function () {\r\n    const vm = this;\r\n    // 获取模板编译生成的 render 方法\r\n    const { render } = vm.$options;\r\n\r\n    // 生成 vnode，虚拟 dom\r\n    const vnode = render.call(vm, vm.$createElement);\r\n    return vnode;\r\n  };\r\n}\r\n","import { initState } from './state';\r\nimport { initRender } from './render';\r\nimport { callHook } from './lifecycle';\r\nimport { mergeOptions } from '../util/index';\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n\r\n    // 这里的 this 代表调用 _init 方法的对象，即实例对象\r\n    // this.$options 就是 new Vue 时候传入的属性和全局 Vue.options 合并之后的结果\r\n    vm.$options = mergeOptions(vm.constructor.options, options);\r\n    initRender(vm);\r\n    callHook(vm, 'beforeCreate');\r\n    initState(vm); // 初始化状态\r\n    callHook(vm, 'created');\r\n\r\n    // 如果有 el 属性，进行模板渲染\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n}\r\n","import { initMixin } from './init';\r\nimport { stateMixin } from './state';\r\nimport { renderMixin } from './render';\r\nimport { lifecycleMixin } from './lifecycle';\r\n\r\n// Vue 是一个构造函数，通过 new 关键字进行实例化\r\nfunction Vue(options) {\r\n  // 这里开始进行 Vue 初始化工作\r\n  this._init(options);\r\n}\r\n\r\n// _init 方法是挂载在 Vue 原型上的方法，通过引入文件的方式进行原型挂载需要传入 Vue\r\n// 此做法有利于代码分割\r\ninitMixin(Vue);\r\nstateMixin(Vue);\r\nlifecycleMixin(Vue);\r\nrenderMixin(Vue);\r\n\r\nexport default Vue;\r\n","import { mergeOptions } from '../util/index';\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.mixin = function (mixin) {\r\n    // 合并对象\r\n    this.options = mergeOptions(this.options, mixin);\r\n    return this;\r\n  };\r\n}\r\n","import { mergeOptions } from '../util/index';\r\n\r\nexport function initExtend(Vue) {\r\n  let cid = 0;\r\n\r\n  // 创建子类继承 Vue 父类，便于属性扩展\r\n  Vue.extend = function (extendOptions = {}) {\r\n    const Super = this;\r\n\r\n    // 创建子类的构造函数，并且调用初始化方法\r\n    const Sub = function VueComponent(options) {\r\n      this._init(options);\r\n    };\r\n    Sub.prototype = Object.create(Super.prototype); // 子类原型指向父类\r\n    Sub.prototype.constructor = Sub; // constructor 指向自己\r\n    Sub.cid = cid++; // 组件的唯一标识\r\n    Sub.options = mergeOptions(Super.options, extendOptions); // 合并自己的 options 和父类的 options\r\n    Sub['super'] = Super;\r\n    return Sub;\r\n  };\r\n}\r\n","import { ASSET_TYPES } from '../../shared/constants';\r\n\r\nexport function initAssetRegisters(Vue) {\r\n  /**\r\n   * Create asset registration methods.\r\n   */\r\n  ASSET_TYPES.forEach((type) => {\r\n    Vue[type] = function (id, definition) {\r\n      if (type === 'component') {\r\n        // 全局组件注册\r\n        // 子组件可能也有 extend 方法，VueComponent.component 方法\r\n        definition.name = definition.name || id;\r\n        definition = this.options._base.extend(definition);\r\n      } else if (type === 'filter') {\r\n      } else if (type === 'directive') {\r\n      }\r\n      this.options[type + 's'][id] = definition;\r\n      return definition;\r\n    };\r\n  });\r\n}\r\n","import { initMixin } from './mixin';\r\nimport { initExtend } from './extend';\r\nimport { initAssetRegisters } from './assets';\r\nimport { ASSET_TYPES } from '../../shared/constants';\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  Vue.options = {};\r\n  // initMixin(Vue);\r\n  // 全局组件/指令/过滤器\r\n  ASSET_TYPES.forEach((type) => {\r\n    Vue.options[type + 's'] = {};\r\n  });\r\n\r\n  // _base 是 Vue 构造函数\r\n  Vue.options._base = Vue;\r\n\r\n  initMixin(Vue);\r\n  // 注册 extend 方法\r\n  initExtend(Vue);\r\n  // 注册 assets 方法\r\n  initAssetRegisters(Vue);\r\n}\r\n","import Vue from './instance/index';\nimport { initGlobalAPI } from './global-api/index';\n\ninitGlobalAPI(Vue);\n\nexport default Vue;\n","/**\n * Query an element selector if it's not an element already.\n */\nexport function query(el) {\n  if (typeof el === 'string') {\n    const selected = document.querySelector(el);\n    if (!selected) {\n      return document.createElement('div');\n    }\n    return selected;\n  } else {\n    return el;\n  }\n}\n","import VNode from './vnode';\r\n\r\nexport const emptyNode = new VNode('', {}, []);\r\n\r\n// 判断新旧两个 vnode 的标签和 key 是否相同。如果相同，可以认为是同一个节点，然后复用\r\nfunction sameVnode(oldVnode, newVnode) {\r\n  return oldVnode.key === newVnode.key && oldVnode.tag === newVnode.tag;\r\n}\r\n\r\n/**\r\n * 旧的子节点，key 和 index 映射表\r\n * { a: 0, b: 1 }，key 为 a 的子节点在第 0 个，key 为 b 的子节点在第 1 个\r\n *\r\n */\r\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\r\n  let i, key;\r\n  const map = {};\r\n  for (i = beginIdx; i <= endIdx; ++i) {\r\n    key = children[i].key;\r\n    if (key) map[key] = i;\r\n  }\r\n  return map;\r\n}\r\n\r\nexport function createPatchFunction() {\r\n  // 虚拟 dom -> 真实 dom\r\n  function createElm(vnode) {\r\n    const children = vnode.children;\r\n    const tag = vnode.tag;\r\n    // 判断虚拟 dom 是元素节点还是文本节点\r\n    if (typeof tag === 'string') {\r\n      // 如果是组件，返回真实组件渲染的真实 dom\r\n      if (createComponent(vnode)) {\r\n        return vnode.componentInstance.$el;\r\n      }\r\n\r\n      // 虚拟 dom 的 elm 属性指向真实 dom，方便后续更新 diff 算法操作\r\n      vnode.elm = document.createElement(tag);\r\n      // 解析虚拟 dom 属性\r\n      updateProperties(vnode);\r\n      // 如果有子节点，递归插入到父节点里面\r\n      children.forEach((child) => {\r\n        vnode.elm.appendChild(createElm(child));\r\n      });\r\n    } else {\r\n      // 文本节点\r\n      vnode.elm = document.createTextNode(vnode.text);\r\n    }\r\n    return vnode.elm;\r\n  }\r\n\r\n  // 创建组件实例\r\n  function createComponent(vnode) {\r\n    let i = vnode.data;\r\n    // 初始化组件\r\n    if ((i = i.hook) && (i = i.init)) {\r\n      i(vnode);\r\n    }\r\n    // 如果组件实例化后有 componentInstance 属性，那证明是组件\r\n    if (vnode.componentInstance) {\r\n      // initComponent(vnode);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function initComponent(vnode) {\r\n    vnode.elm = vnode.componentInstance.$el;\r\n  }\r\n\r\n  // 解析 vnode 的 data 属性，映射到真实 dom 上\r\n  function updateProperties(vnode, oldProps = {}) {\r\n    // 真实的 dom 节点\r\n    const elm = vnode.elm;\r\n    const newProps = vnode.data || {};\r\n\r\n    // 移除新节点上没有的属性\r\n    for (const key in oldProps) {\r\n      if (!newProps[key]) {\r\n        elm.removeAttribute(key);\r\n      }\r\n    }\r\n\r\n    // 特殊处理 style 属性，如果新节点没有，置空 style 属性值\r\n    const newStyle = newProps.style || {};\r\n    const oldStyle = oldProps.style || {};\r\n    for (const key in oldStyle) {\r\n      if (!newStyle[key]) {\r\n        elm.style[key] = '';\r\n      }\r\n    }\r\n\r\n    // 遍历设置新的属性\r\n    for (const key in newProps) {\r\n      if (key === 'style') {\r\n        for (const styleName in newProps.style) {\r\n          elm.style[styleName] = newProps.style[styleName];\r\n        }\r\n      } else if (key === 'class') {\r\n        elm.className = newProps.class;\r\n      } else {\r\n        // 给元素设置属性\r\n        elm.setAttribute(key, newProps[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // diff 算法核心。采用双指针方式，对比新旧 vnode 子节点\r\n  function updateChildren(parentElm, oldCh, newCh) {\r\n    // ???\r\n    const patch = vm.__patch__;\r\n\r\n    let oldStartIdx = 0; // 旧的子节点起始下标\r\n    let newStartIdx = 0; // 新的子节点起始下标\r\n    let oldEndIdx = oldCh.length - 1; // 旧的子节点结束下标\r\n    let oldStartVnode = oldCh[0]; // 旧的第一个子节点\r\n    let oldEndVnode = oldCh[oldEndIdx]; // 旧的最后一个子节点\r\n    let newEndIdx = newCh.length - 1;\r\n    let newStartVnode = newCh[0];\r\n    let newEndVnode = newCh[newEndIdx];\r\n\r\n    // 只有当新旧子节点的双指针起始位置不大于结束位置时才循环，一方停止循环即结束\r\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n      // 暴力对比过程会把移动的 vnode 置为 undefined，如果不存在 vnode 节点，直接跳过\r\n      if (!oldStartVnode) {\r\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\r\n      } else if (!oldEndVnode) {\r\n        oldEndVnode = oldCh[--oldEndIdx];\r\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\r\n        // 旧头和新头，依次向后追加\r\n        patch(oldStartVnode, newStartVnode); // 递归比较子节点以及他们的子节点\r\n        oldStartVnode = oldCh[++oldStartIdx];\r\n        newStartVnode = newCh[++newStartIdx];\r\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\r\n        // 旧尾和新尾，依次向前追加\r\n        patch(oldEndVnode, newEndVnode);\r\n        oldEndVnode = oldCh[--oldEndIdx];\r\n        newEndVnode = newCh[--newEndIdx];\r\n      } else if (sameVnode(oldStartVnode, newEndVnode)) {\r\n        // Vnode moved right\r\n\r\n        // 旧头和新尾，旧头移至尾部\r\n        patch(oldStartVnode, newEndVnode);\r\n        // insertBefore 可以移动或者插入真实 dom\r\n        parentElm.insertBefore(oldStartVnode.elm, oldEndVnode.elm.nextSibling);\r\n        oldStartVnode = oldCh[++oldStartIdx];\r\n        newEndVnode = newCh[--newEndIdx];\r\n      } else if (sameVnode(oldEndVnode, newStartVnode)) {\r\n        // Vnode moved left\r\n\r\n        // 旧尾和新头，旧尾移至头部\r\n        patch(oldEndVnode, newStartVnode);\r\n        parentElm.insertBefore(oldEndVnode.elm, oldStartVnode.elm);\r\n        oldEndVnode = oldCh[--oldEndIdx];\r\n        newStartVnode = newCh[++newStartIdx];\r\n      } else {\r\n        // 以上四种情况均不满足，需要进行暴力对比\r\n        let oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\r\n        // 根据旧子节点的 key 和 index 映射表，从新的起始子节点进行查找。如果可以找到就进行移动操作，否则直接进行插入操作\r\n        let idxInOld = oldKeyToIdx[newStartVnode.key];\r\n        if (!idxInOld) {\r\n          // New element\r\n\r\n          // 找不到旧的节点，直接插入\r\n          parentElm.insertBefore(createElm(newStartVnode), oldStartVnode.elm);\r\n        } else {\r\n          // 找到的旧节点\r\n          let vnodeToMove = oldCh[idxInOld];\r\n          // 占位操作，避免旧节点移走后，破坏初始映射表节点位置\r\n          oldCh[idxInOld] = undefined;\r\n          // 把找到的节点移动到最前面\r\n          parentElm.insertBefore(vnodeToMove.elm, oldStartVnode.elm);\r\n          patch(vnodeToMove, newStartVnode);\r\n        }\r\n        // newStartVnode = newCh[++newStartIdx];\r\n      }\r\n    }\r\n    if (oldStartIdx > oldEndIdx) {\r\n      // 如果第二个参数为 null，将指定节点添加到列表末尾\r\n      const refElm = !newCh[newEndIdx + 1] ? null : newCh[newEndIdx + 1].elm;\r\n      // 旧节点循环结束，新节点还有剩余。新节点添加到头部或尾部\r\n      for (let i = newStartIdx; i <= newEndIdx; i++) {\r\n        parentElm.insertBefore(createElm(newCh[i]), refElm);\r\n      }\r\n    } else if (newStartIdx > newEndIdx) {\r\n      // 新节点循环结束，老节点还有剩余。老节点移除\r\n      for (let i = oldStartIdx; i <= oldEndIdx; i++) {\r\n        let ch = oldCh[i];\r\n        if (!ch) {\r\n          parentElm.removeChild(ch.elm);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 渲染和更新视图\r\n  return function patch(oldVnode, vnode) {\r\n    debugger;\r\n\r\n    /**\r\n     * 判断传入的 oldVnode 是否是真实元素\r\n     * 初次渲染时，传入的 vm.$el 是真实的 dom\r\n     * 更新时，传入的是更新前的虚拟 dom\r\n     */\r\n    if (!oldVnode) {\r\n      // empty mount (likely as component), create new root element\r\n      return createElm(vnode);\r\n    } else {\r\n      const isRealElement = oldVnode.nodeType;\r\n      if (isRealElement) {\r\n        // oldVnode 是真实 dom 元素，代表初次渲染\r\n        const oldElm = oldVnode;\r\n        const parentElm = oldElm.parentNode;\r\n\r\n        // 虚拟 dom -> 真实 dom\r\n        const elm = createElm(vnode);\r\n\r\n        /**\r\n         * 插入到老的 elm 节点之后一个节点的前面，相当于插入到老的 elm 节点后面\r\n         * 不直接 appendChild，避免破坏替换位置\r\n         */\r\n        parentElm.insertBefore(elm, oldElm.nextSibling);\r\n        // 移除老的 elm 节点\r\n        parentElm.removeChild(oldVnode);\r\n        return elm;\r\n      } else {\r\n        // oldVnode 是虚拟 dom 元素，代表更新，使用 diff 算法\r\n\r\n        // 新旧节点的标签不一致，用新的替换旧的，oldVnode.elm 代表的是真实 dom\r\n        if (oldVnode.tag !== vnode.tag) {\r\n          oldVnode.elm.parentNode.replaceChild(createElm(vnode), oldVnode.elm);\r\n        }\r\n\r\n        // 如果旧节点是一个文本节点\r\n        if (!oldVnode.tag) {\r\n          if (oldVnode.text !== vnode.text) {\r\n            oldVnode.elm.textContent = vnode.text;\r\n          }\r\n        }\r\n\r\n        /**\r\n         * 不符合上面两种，说明标签一致并且不是文本节点\r\n         * 为了复用节点，把旧虚拟 dom 对应的真实 dom 赋值给新虚拟 dom 的 elm 属性\r\n         */\r\n        const elm = (vnode.elm = oldVnode.elm);\r\n        // 更新属性\r\n        updateProperties(vnode, oldVnode.data);\r\n\r\n        const oldCh = oldVnode.children || [];\r\n        const newCh = vnode.children || [];\r\n        if (oldCh.length > 0 && newCh.length > 0) {\r\n          // 新旧都存在子节点\r\n          updateChildren(elm, oldCh, newCh);\r\n        } else if (oldCh.length) {\r\n          // 旧的有儿子，新的没有\r\n          elm.innerHTML = '';\r\n        } else if (newCh.length) {\r\n          // 新的有儿子，旧的没有\r\n          for (let i = 0; i < newCh.length; i++) {\r\n            const child = newCh[i];\r\n            elm.appendChild(createElm(child));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { createPatchFunction } from '../../core/vdom/patch';\n\nexport const patch = createPatchFunction();\n","import Vue from '../../core/index';\nimport { mountComponent } from '../../core/instance/lifecycle';\nimport { query } from '../util/index';\nimport { patch } from './patch';\n\n// install platform patch function\nVue.prototype.__patch__ = patch;\n\nVue.prototype.$mount = function (el) {\n  el = el ? query(el) : undefined;\n  // 将当前组件实例挂载到真实的 el 节点上面\n  return mountComponent(this, el);\n};\n\nexport default Vue;\n","// 匹配属性，形如：id=\"app\"\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// 匹配标签名，形如：abc-123\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\n// 匹配特殊标签，形如：abc:234，前面的 abc: 可有可无\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// 匹配标签开始，形如：<abc-123，捕获里面的标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n// 匹配标签结束，>\nconst startTagClose = /^\\s*(\\/?)>/;\n// 匹配标签结尾，形如：</abc-123>，捕获里面的标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\n\nexport { attribute, startTagOpen, startTagClose, endTag };\n","// 以下为源码中的正则表达式\r\nimport { attribute, startTagOpen, startTagClose, endTag } from './html-parser';\r\n\r\n// 创建 AST\r\nfunction createASTElement(tag, attrs) {\r\n  return {\r\n    type: 1,\r\n    tag,\r\n    attrs,\r\n    parent: null,\r\n    children: [],\r\n  };\r\n}\r\n\r\n// HTML -> AST\r\nexport function parse(html) {\r\n  // 用栈结构来表示开始/结束标签\r\n  let stack = [];\r\n  // 根节点\r\n  let root;\r\n  // 当前父节点\r\n  let currentParent;\r\n\r\n  while (html) {\r\n    // 查找 <\r\n    let textEnd = html.indexOf('<');\r\n    // 如果 < 在第一个，那么证明接下来就是一个标签，不管是开始还是结束标签\r\n    if (textEnd === 0) {\r\n      // 匹配开始标签\r\n      const startTagMatch = parseStartTag();\r\n      if (startTagMatch) {\r\n        // 把解析好的标签名和属性，生成 AST\r\n        handleStartTag(startTagMatch);\r\n        continue;\r\n      }\r\n\r\n      // 匹配结束标签 </\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        handleEndTag(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    let text;\r\n    // 形如：hello<div></div>\r\n    if (textEnd >= 0) {\r\n      // 获取文本\r\n      text = html.substring(0, textEnd);\r\n    }\r\n\r\n    if (text) {\r\n      advance(text.length);\r\n      handleChars(text);\r\n    }\r\n  }\r\n\r\n  // 截取 html 字符串，每次匹配到了就往前继续匹配\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n\r\n  // 对文本进行处理\r\n  function handleChars(text) {\r\n    // 去掉空格\r\n    text = text.replace(/\\s/g, '');\r\n    if (text) {\r\n      currentParent.children.push({\r\n        type: 3,\r\n        text,\r\n      });\r\n    }\r\n  }\r\n\r\n  // 匹配开始标签\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: [],\r\n      };\r\n      // 匹配到了开始标签，就截取掉\r\n      advance(start[0].length);\r\n\r\n      // 开始匹配属性\r\n      // end 代表结束符号 >，如果不是匹配到了结束标签\r\n      // attr 表示匹配的属性\r\n      let end, attr;\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length);\r\n        attr = {\r\n          name: attr[1],\r\n          // 这里是因为正则捕获支持双引号、单引号和无引号的属性值\r\n          value: attr[3] || attr[4] || attr[5],\r\n        };\r\n        match.attrs.push(attr);\r\n      }\r\n      if (end) {\r\n        // 代表一个标签匹配到结束的 > 了，代表开始标签解析完毕\r\n        advance(1);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 对开始标签进行处理\r\n  function handleStartTag({ tagName, attrs }) {\r\n    let element = createASTElement(tagName, attrs);\r\n    if (!root) {\r\n      root = element;\r\n    }\r\n    currentParent = element;\r\n    stack.push(element);\r\n  }\r\n\r\n  // 对结束标签进行处理\r\n  function handleEndTag(tagName) {\r\n    // 栈结构 []\r\n    // 比如 <div><span></span></div>，当遇到第一个结束标签 </span> 时，会匹配到栈顶 <span> 元素对应的 AST 并取出来\r\n    let element = stack.pop();\r\n    // 当前父元素就是栈顶的上一个元素，在这里就类似 div\r\n    currentParent = stack[stack.length - 1];\r\n    // 建立 parent 和 children 关系\r\n    if (currentParent) {\r\n      element.parent = currentParent;\r\n      currentParent.children.push(element);\r\n    }\r\n  }\r\n\r\n  // 返回生成的 AST\r\n  return root;\r\n}\r\n","// 匹配花括号 {{ }}，捕获花括号里面的内容\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// 递归创建生成 code\r\nexport function generate(el) {\r\n  debugger;\r\n  const children = genChildren(el);\r\n  const code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'}${\r\n    children ? `,${children}` : ''\r\n  })`;\r\n  return code;\r\n}\r\n\r\n// 生成子节点，调用 gen 函数进行递归创建\r\nfunction genChildren(el) {\r\n  const children = el.children;\r\n  if (children.length) {\r\n    const gen = genNode;\r\n    return `${children.map((c) => gen(c)).join(',')}`;\r\n  }\r\n}\r\n\r\n/**\r\n * 判断节点类型\r\n * 处理文本核心\r\n * 源码中有更复杂的处理，比如：v-once、v-for、directives 和 slot 等。这里只考虑普通文本和变量表达式 {{ }} 的处理\r\n */\r\nfunction genNode(node) {\r\n  // 如果是元素类型\r\n  if (node.type === 1) {\r\n    return generate(node);\r\n  } else {\r\n    // 如果是文本节点\r\n    let text = node.text;\r\n    // 如果不存在花括号变量表达式\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    }\r\n\r\n    // 正则是全局模式，每次需要重置正则的 lastIndex 属性，不然会引发匹配 bug\r\n    let lastIndex = (defaultTagRE.lastIndex = 0);\r\n    let tokens = [];\r\n    let match, index;\r\n\r\n    while ((match = defaultTagRE.exec(text))) {\r\n      // index 代表匹配到的位置\r\n      index = match.index;\r\n      if (index > lastIndex) {\r\n        // 匹配到的 {{ 位置，在 tokens 里面放入普通文本\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n      }\r\n      // 放入捕获到的变量内容\r\n      tokens.push(`_s(${match[1].trim()})`);\r\n      // 匹配指针后移\r\n      lastIndex = index + match[0].length;\r\n    }\r\n\r\n    // 如果匹配完了花括号，text 里面还有剩余的普通文本，那么继续 push\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n    }\r\n\r\n    // _v 表示创建文本\r\n    return `_v(${tokens.join('+')})`;\r\n  }\r\n}\r\n\r\n// 处理 props 属性\r\nfunction genProps(props) {\r\n  let staticProps = ``;\r\n  for (let i = 0; i < props.length; i++) {\r\n    const prop = props[i];\r\n    // 对 props 属性里面的 style 做特殊处理\r\n    if (prop.name === 'style') {\r\n      let obj = {};\r\n      prop.value.split(';').forEach((item) => {\r\n        let [key, value] = item.split(':');\r\n        obj[key] = value;\r\n      });\r\n      prop.value = obj;\r\n    }\r\n    const value = generateValue(prop.value);\r\n    staticProps += `\"${prop.name}\":${value},`;\r\n  }\r\n  staticProps = `{${staticProps.slice(0, -1)}}`;\r\n  return staticProps;\r\n}\r\n\r\nfunction generateValue(value) {\r\n  return JSON.stringify(value);\r\n}\r\n","import { parse } from './parser/index';\r\nimport { generate } from './codegen/index';\r\n\r\n// template 字符串 -> render 函数\r\nexport function compileToFunctions(template) {\r\n  // 把 html 代码转换成 ast 语法树\r\n  // ast 用来描述代码本身形成树结构，可以描述 html/css/javascript\r\n  const ast = parse(template);\r\n\r\n  /**\r\n   * 优化静态节点\r\n   *\r\n    if (options.optimize !== false) {\r\n      optimize(ast, options);\r\n    }\r\n   *\r\n   */\r\n\r\n  /**\r\n   * 通过 ast 生成代码\r\n   * 类似：\r\n   *\r\n    _c(\r\n      \"div\",\r\n      { id: \"a\" },\r\n      _c(\r\n        \"ul\",\r\n        undefined,\r\n        _c(\"li\", undefined, _v(\"长度：\" + _s(array.value.length)))\r\n      )\r\n    );\r\n   *\r\n   * _c：创建元素\r\n   * _v：创建文本\r\n   * _s：JSON.stringify，把对象解析成文本\r\n   */\r\n  const code = generate(ast);\r\n\r\n  // 使用 with 语法改变作用域为 this。之后调用 render 函数可以使用 call 改变 this，方便 code 里的变量取值\r\n  const renderFn = new Function(`with(this){return ${code}}`);\r\n  debugger;\r\n  return renderFn;\r\n}\r\n","import Vue from './runtime/index';\nimport { query } from './util/index';\nimport { compileToFunctions } from './compiler/index';\n\nconst mount = Vue.prototype.$mount;\n// 代表的是 Vue 源码里面包含了 compile 编译功能，这个和 runtime-only 版本需要区分开\nVue.prototype.$mount = function (el) {\n  el = el && query(el);\n  const options = this.$options;\n  debugger;\n\n  // resolve template/el and convert to render function\n  // 如果不存在 render 属性\n  if (!options.render) {\n    let template = options.template;\n    if (template) {\n      //\n    } else if (el) {\n      // 如果不存在 render 和 template，但是存在 el\n      // 直接将模板赋值到 el 所在的外层 html 结构（就是 el 本身，并不是父元素）\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      // 最终需要把 template 模板转化成 render 函数\n      const render = compileToFunctions(template);\n      options.render = render;\n    }\n  }\n  return mount.call(this, el);\n};\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    const container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\n// Vue.compile = compileToFunctions\n\nexport default Vue;\n"],"names":["isObject","obj","extend","to","_from","key","noop","ASSET_TYPES","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","Array","isArray","forEach","hook","mergeAssets","res","Object","create","type","mergeOptions","parent","child","options","mergeFiled","hasOwnProperty","isReservedTag","tagName","str","map","list","split","i","length","lifecycleMixin","Vue","prototype","_update","vnode","vm","prevVnode","_vnode","$el","__patch__","mountComponent","el","callHook","updateComponent","_render","Watcher","handlers","$options","call","callbacks","pending","flushCallbacks","timerFunc","Promise","p","resolve","then","MutationObserver","counter","observer","textNode","document","createTextNode","String","observe","characterData","data","setImmediate","setTimeout","nextTick","cb","push","queue","has","resetSchedulerState","flushSchedulerQueue","watcher","index","run","updatedQueue","slice","callUpdatedHooks","_watcher","queueWatcher","id","Dep","subs","target","addDep","l","update","targetStack","pushTarget","popTarget","pop","exprOrFn","isRenderWatcher","user","lazy","dirty","deps","depIds","Set","getter","segments","value","undefined","get","dep","add","addSub","newVal","oldVal","depend","arrayProto","arrayMethods","methodsToPatch","method","original","args","result","apply","ob","__ob__","inserted","observeArray","notify","Observer","defineProperty","enumerable","writable","configurable","protoAugment","walk","keys","defineReactive","items","src","__proto__","childOb","reactiveGetter","dependArray","set","reactiveSetter","newValue","e","sharedPropertyDefinition","proxy","sourceKey","val","initState","opts","props","initProps","methods","initMethods","initData","computed","initComputed","watch","initWatch","_data","getData","computedWatcherOptions","watchers","_computedWatchers","userDef","defineComputed","createComputedGetter","computedGetter","evaluate","handler","item","createWatcher","expOrFn","$watch","stateMixin","immediate","VNode","tag","children","text","componentOptions","createTextVNode","createComponent","Ctor","context","baseCtor","_base","installComponentHooks","name","cid","init","componentInstance","_isComponent","$mount","createElement","components","installRenderHelpers","_c","_s","JSON","stringify","_v","initRender","$createElement","a","b","c","d","renderMixin","$nextTick","render","initMixin","_init","constructor","mixin","initExtend","extendOptions","Super","Sub","VueComponent","initAssetRegisters","definition","initGlobalAPI","query","selected","querySelector","sameVnode","oldVnode","newVnode","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","createElm","elm","updateProperties","appendChild","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","updateChildren","parentElm","oldCh","newCh","patch","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","insertBefore","nextSibling","oldKeyToIdx","idxInOld","vnodeToMove","refElm","ch","removeChild","isRealElement","nodeType","oldElm","parentNode","replaceChild","textContent","innerHTML","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","createASTElement","attrs","parse","html","stack","root","currentParent","textEnd","indexOf","startTagMatch","parseStartTag","handleStartTag","endTagMatch","match","advance","handleEndTag","substring","handleChars","n","replace","start","end","attr","element","defaultTagRE","generate","genChildren","code","genProps","gen","genNode","join","node","test","lastIndex","tokens","exec","trim","staticProps","prop","generateValue","compileToFunctions","template","ast","renderFn","Function","mount","getOuterHTML","outerHTML","container","cloneNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACO,SAASA,QAAQ,CAACC,GAAG,EAAE;IAC5B,IAAI,OAAA,CAAOA,GAAG,CAAK,KAAA,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;EAC3C,IAAA,OAAO,KAAK,CAAA;EACd,GAAA;EACA,EAAA,OAAO,IAAI,CAAA;EACb,CAAA;;EAEA;EACA;EACA;EACO,SAASC,MAAM,CAACC,EAAE,EAAEC,KAAK,EAAE;EAChC,EAAA,KAAK,IAAMC,GAAG,IAAID,KAAK,EAAE;EACvBD,IAAAA,EAAE,CAACE,GAAG,CAAC,GAAGD,KAAK,CAACC,GAAG,CAAC,CAAA;EACtB,GAAA;EACA,EAAA,OAAOF,EAAE,CAAA;EACX,CAAA;EAEO,SAASG,IAAI,GAAG;;ECpBhB,IAAMC,WAAW,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAA;EAExD,IAAMC,eAAe,GAAG,CAC7B,cAAc,EACd,SAAS,EACT,aAAa,EACb,SAAS,EACT,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAA;EACA;EACA;EACA;EACA;EAAA,CACD;;ECdD;EACA;EACA;EACA;EACA;EACA;EACA,IAAMC,MAAM,GAAG,EAAE,CAAA;;EAEjB;EACA;EACA;EACA;EACA,SAASC,SAAS,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACtC,EAAA,IAAIA,QAAQ,EAAE;EACZ,IAAA,IAAID,SAAS,EAAE;EACb,MAAA,OAAOA,SAAS,CAACE,MAAM,CAACD,QAAQ,CAAC,CAAA;EACnC,KAAC,MAAM;QACL,OAAOE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC,CAAA;EACxD,KAAA;EACF,GAAC,MAAM;EACL,IAAA,OAAOD,SAAS,CAAA;EAClB,GAAA;EACF,CAAA;EAEAH,eAAe,CAACQ,OAAO,CAAC,UAACC,IAAI,EAAK;EAChCR,EAAAA,MAAM,CAACQ,IAAI,CAAC,GAAGP,SAAS,CAAA;EAC1B,CAAC,CAAC,CAAA;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASQ,WAAW,CAACP,SAAS,EAAEC,QAAQ,EAAE;EACxC;EACF;EACA;EACA;EACA;EACA;EACE,EAAA,IAAMO,GAAG,GAAGC,MAAM,CAACC,MAAM,CAACV,SAAS,CAAC,CAAA;EACpC,EAAA,IAAIC,QAAQ,EAAE;EACZ,IAAA,OAAOV,MAAM,CAACiB,GAAG,EAAEP,QAAQ,CAAC,CAAA;EAC9B,GAAC,MAAM;EACL,IAAA,OAAOO,GAAG,CAAA;EACZ,GAAA;EACF,CAAA;;EAEA;EACAZ,WAAW,CAACS,OAAO,CAAC,UAAUM,IAAI,EAAE;EAClCb,EAAAA,MAAM,CAACa,IAAI,GAAG,GAAG,CAAC,GAAGJ,WAAW,CAAA;EAClC,CAAC,CAAC,CAAA;;EAEF;EACA;EACA;EACA;EACO,SAASK,YAAY,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC1C,IAAMC,OAAO,GAAG,EAAE,CAAA;EAClB,EAAA,IAAIrB,GAAG,CAAA;EACP;IACA,KAAKA,GAAG,IAAImB,MAAM,EAAE;MAClBG,UAAU,CAACtB,GAAG,CAAC,CAAA;EACjB,GAAA;EACA;IACA,KAAKA,GAAG,IAAIoB,KAAK,EAAE;EACjB,IAAA,IAAI,CAACD,MAAM,CAACI,cAAc,CAACvB,GAAG,CAAC,EAAE;QAC/BsB,UAAU,CAACtB,GAAG,CAAC,CAAA;EACjB,KAAA;EACF,GAAA;IACA,SAASsB,UAAU,CAACtB,GAAG,EAAE;EACvB;EACA,IAAA,IAAII,MAAM,CAACJ,GAAG,CAAC,EAAE;EACfqB,MAAAA,OAAO,CAACrB,GAAG,CAAC,GAAGI,MAAM,CAACJ,GAAG,CAAC,CAACmB,MAAM,CAACnB,GAAG,CAAC,EAAEoB,KAAK,CAACpB,GAAG,CAAC,CAAC,CAAA;EACrD,KAAC,MAAM;EACL;EACAqB,MAAAA,OAAO,CAACrB,GAAG,CAAC,GAAGoB,KAAK,CAACpB,GAAG,CAAC,GAAGoB,KAAK,CAACpB,GAAG,CAAC,GAAGmB,MAAM,CAACnB,GAAG,CAAC,CAAA;EACtD,KAAA;EACF,GAAA;EACA,EAAA,OAAOqB,OAAO,CAAA;EAChB;;EClFO,SAASG,aAAa,CAACC,OAAO,EAAE;EACrC;IACA,IAAMC,GAAG,GACP,4CAA4C,GAC5C,2EAA2E,GAC3E,oEAAoE,GACpE,wEAAwE,GACxE,6EAA6E,GAC7E,2DAA2D,GAC3D,kDAAkD,GAClD,yEAAyE,GACzE,kCAAkC,GAClC,uCAAuC,GACvC,yDAAyD,CAAA;IAC3D,IAAMC,GAAG,GAAG,EAAE,CAAA;EACd,EAAA,IAAMC,IAAI,GAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC,CAAA;EAC3B,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;EACpCH,IAAAA,GAAG,CAACC,IAAI,CAACE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;EACrB,GAAA;IACA,OAAOH,GAAG,CAACF,OAAO,CAAC,CAAA;EACrB;;ECrBO,SAASO,cAAc,CAACC,GAAG,EAAE;EAClC;EACAA,EAAAA,GAAG,CAACC,SAAS,CAACC,OAAO,GAAG,UAAUC,KAAK,EAAE;MACvC,IAAMC,EAAE,GAAG,IAAI,CAAA;EACf;EACA,IAAA,IAAMC,SAAS,GAAGD,EAAE,CAACE,MAAM,CAAA;MAC3BF,EAAE,CAACE,MAAM,GAAGH,KAAK,CAAA;MACjB,IAAI,CAACE,SAAS,EAAE;EACd;EACA;EACAD,MAAAA,EAAE,CAACG,GAAG,GAAGH,EAAE,CAACI,SAAS,CAACJ,EAAE,CAACG,GAAG,EAAEJ,KAAK,CAAC,CAAA;EACtC,KAAC,MAAM;EACL;QACAC,EAAE,CAACG,GAAG,GAAGH,EAAE,CAACI,SAAS,CAACH,SAAS,EAAEF,KAAK,CAAC,CAAA;EACzC,KAAA;KACD,CAAA;EACH,CAAA;EAEO,SAASM,cAAc,CAACL,EAAE,EAAEM,EAAE,EAAE;EACrC;EACF;EACA;EACA;EACA;;EAEE;IACAN,EAAE,CAACG,GAAG,GAAGG,EAAE,CAAA;EACXC,EAAAA,QAAQ,CAACP,EAAE,EAAE,aAAa,CAAC,CAAA;EAE3B,EAAA,IAAIQ,eAAe,GAAG,SAAlBA,eAAe,GAAS;EAC1B;EACAR,IAAAA,EAAE,CAACF,OAAO,CAACE,EAAE,CAACS,OAAO,EAAE,CAAC,CAAA;KACzB,CAAA;;EAED;EACA,EAAA,IAAIC,OAAO,CACTV,EAAE,EACFQ,eAAe,EACf,YAAM;EACJD,IAAAA,QAAQ,CAACP,EAAE,EAAE,cAAc,CAAC,CAAA;EAC9B,GAAC,EACD,IAAI,EACJ,IAAI,uBACL,CAAA;;EAEDO,EAAAA,QAAQ,CAACP,EAAE,EAAE,SAAS,CAAC,CAAA;EACvB,EAAA,OAAOA,EAAE,CAAA;EACX,CAAA;EAEO,SAASO,QAAQ,CAACP,EAAE,EAAEzB,IAAI,EAAE;EACjC,EAAA,IAAMoC,QAAQ,GAAGX,EAAE,CAACY,QAAQ,CAACrC,IAAI,CAAC,CAAA;EAClC;EACA,EAAA,IAAIoC,QAAQ,EAAE;EACZ,IAAA,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,QAAQ,CAACjB,MAAM,EAAED,CAAC,EAAE,EAAE;EACxC;EACAkB,MAAAA,QAAQ,CAAClB,CAAC,CAAC,CAACoB,IAAI,CAACb,EAAE,CAAC,CAAA;EACtB,KAAA;EACF,GAAA;EACF;;EC5DA,IAAMc,SAAS,GAAG,EAAE,CAAA;EACpB,IAAIC,OAAO,GAAG,KAAK,CAAA;EAEnB,SAASC,cAAc,GAAG;EACxB;EACAD,EAAAA,OAAO,GAAG,KAAK,CAAA;EACf;EACA,EAAA,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqB,SAAS,CAACpB,MAAM,EAAED,CAAC,EAAE,EAAE;MACzCqB,SAAS,CAACrB,CAAC,CAAC,EAAE,CAAA;EAChB,GAAA;EACF,CAAA;;EAEA;EACA,IAAIwB,SAAS,CAAA;EAEb,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;EAClC;EACA,EAAA,IAAMC,CAAC,GAAGD,OAAO,CAACE,OAAO,EAAE,CAAA;EAC3BH,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;EAChBE,IAAAA,CAAC,CAACE,IAAI,CAACL,cAAc,CAAC,CAAA;KACvB,CAAA;EACH,CAAC,MAAM,IAAI,OAAOM,gBAAgB,KAAK,WAAW,EAAE;EAClD;IACA,IAAIC,OAAO,GAAG,CAAC,CAAA;EACf,EAAA,IAAMC,QAAQ,GAAG,IAAIF,gBAAgB,CAACN,cAAc,CAAC,CAAA;IACrD,IAAMS,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAACC,MAAM,CAACL,OAAO,CAAC,CAAC,CAAA;EACzDC,EAAAA,QAAQ,CAACK,OAAO,CAACJ,QAAQ,EAAE;EACzBK,IAAAA,aAAa,EAAE,IAAA;EACjB,GAAC,CAAC,CAAA;EACFb,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;EAChBM,IAAAA,OAAO,GAAG,CAACA,OAAO,GAAG,CAAC,IAAI,CAAC,CAAA;EAC3BE,IAAAA,QAAQ,CAACM,IAAI,GAAGH,MAAM,CAACL,OAAO,CAAC,CAAA;KAChC,CAAA;EACH,CAAC,MAAM,IAAI,OAAOS,YAAY,KAAK,WAAW,EAAE;EAC9C;EACA;EACA;EACAf,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;MAChBe,YAAY,CAAChB,cAAc,CAAC,CAAA;KAC7B,CAAA;EACH,CAAC,MAAM;EACL;EACA;EACAC,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;EAChBgB,IAAAA,UAAU,CAACjB,cAAc,EAAE,CAAC,CAAC,CAAA;KAC9B,CAAA;EACH,CAAA;EAEO,SAASkB,QAAQ,CAACC,EAAE,EAAE;EAC3B;EACArB,EAAAA,SAAS,CAACsB,IAAI,CAACD,EAAE,CAAC,CAAA;IAClB,IAAI,CAACpB,OAAO,EAAE;EACZ;EACAA,IAAAA,OAAO,GAAG,IAAI,CAAA;EACdE,IAAAA,SAAS,EAAE,CAAA;EACb,GAAA;EACF;;ECrDA,IAAIoB,KAAK,GAAG,EAAE,CAAC;EACf,IAAIC,GAAG,GAAG,EAAE,CAAC;;EAEb;EACA;EACA;EACA,SAASC,mBAAmB,GAAG;IAC7BF,KAAK,CAAC3C,MAAM,GAAG,CAAC,CAAA;IAChB4C,GAAG,GAAG,EAAE,CAAA;EACV,CAAA;;EAEA;EACA;EACA;EACA,SAASE,mBAAmB,GAAG;EAC7B,EAAA,IAAIC,OAAO,CAAA;;EAEX;EACA;EACA,EAAA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,KAAK,CAAC3C,MAAM,EAAEgD,KAAK,EAAE,EAAE;EACjDD,IAAAA,OAAO,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAA;EACtB;MACAD,OAAO,CAACE,GAAG,EAAE,CAAA;EACf,GAAA;;EAEA;EACA,EAAA,IAAMC,YAAY,GAAGP,KAAK,CAACQ,KAAK,EAAE,CAAA;;EAElC;EACAN,EAAAA,mBAAmB,EAAE,CAAA;IAErBO,gBAAgB,CAACF,YAAY,CAAC,CAAA;EAChC,CAAA;EAEA,SAASE,gBAAgB,CAACT,KAAK,EAAE;EAC/B,EAAA,SAAA;EACA,EAAA,IAAI5C,CAAC,GAAG4C,KAAK,CAAC3C,MAAM,CAAA;IACpB,OAAOD,CAAC,EAAE,EAAE;EACV,IAAA,IAAMgD,OAAO,GAAGJ,KAAK,CAAC5C,CAAC,CAAC,CAAA;EACxB,IAAA,IAAMO,EAAE,GAAGyC,OAAO,CAACzC,EAAE,CAAA;EACrB,IAAA,IAAIA,EAAE,CAAC+C,QAAQ,KAAKN,OAAO,EAAE;EAC3BlC,MAAAA,QAAQ,CAACP,EAAE,EAAE,SAAS,CAAC,CAAA;EACzB,KAAA;EACF,GAAA;EACF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACO,SAASgD,YAAY,CAACP,OAAO,EAAE;EACpC,EAAA,IAAMQ,EAAE,GAAGR,OAAO,CAACQ,EAAE,CAAA;EACrB;EACA,EAAA,IAAIX,GAAG,CAACW,EAAE,CAAC,IAAI,IAAI,EAAE;EACnBX,IAAAA,GAAG,CAACW,EAAE,CAAC,GAAG,IAAI,CAAA;EACd;EACAZ,IAAAA,KAAK,CAACD,IAAI,CAACK,OAAO,CAAC,CAAA;EACnB;MACAP,QAAQ,CAACM,mBAAmB,CAAC,CAAA;EAC/B,GAAA;EACF;;ECjEA;EACA;EACA;EACA;;EAEA;EACA,IAAIS,IAAE,GAAG,CAAC,CAAA;;EAEV;EACA;EACA;EACA;EAHA,IAIqBC,GAAG,gBAAA,YAAA;IACtB,SAAc,GAAA,GAAA;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;EACZ,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAA;EACd,IAAA,IAAI,CAACE,IAAI,GAAG,EAAE,CAAC;EACjB,GAAA;EAAC,EAAA,YAAA,CAAA,GAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,QAAA;MAAA,KAED,EAAA,SAAA,MAAA,CAAOV,OAAO,EAAE;EACd;EACA,MAAA,IAAI,CAACU,IAAI,CAACf,IAAI,CAACK,OAAO,CAAC,CAAA;EACzB,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EAED,SAAS,MAAA,GAAA;EACP;QACA,IAAIS,GAAG,CAACE,MAAM,EAAE;EACd;EACAF,QAAAA,GAAG,CAACE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;EACzB,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EAED,SAAS,MAAA,GAAA;EACP;EACA,MAAA,IAAMF,IAAI,GAAG,IAAI,CAACA,IAAI,CAACN,KAAK,EAAE,CAAA;EAC9B;EACA,MAAA,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAE6D,CAAC,GAAGH,IAAI,CAACzD,MAAM,EAAED,CAAC,GAAG6D,CAAC,EAAE7D,CAAC,EAAE,EAAE;EAC3C0D,QAAAA,IAAI,CAAC1D,CAAC,CAAC,CAAC8D,MAAM,EAAE,CAAA;EAClB,OAAA;EACF,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,GAAA,CAAA;EAAA,CAGH,EAAA,CAAA;EAIAL,GAAG,CAACE,MAAM,GAAG,IAAI,CAAA;EACjB;EACA,IAAMI,WAAW,GAAG,EAAE,CAAA;EAEf,SAASC,UAAU,CAAChB,OAAO,EAAE;EAClCe,EAAAA,WAAW,CAACpB,IAAI,CAACK,OAAO,CAAC,CAAA;EACzB;IACAS,GAAG,CAACE,MAAM,GAAGX,OAAO,CAAA;EACtB,CAAA;EAEO,SAASiB,SAAS,GAAG;EAC1B;IACAF,WAAW,CAACG,GAAG,EAAE,CAAA;EACjB;IACAT,GAAG,CAACE,MAAM,GAAGI,WAAW,CAACA,WAAW,CAAC9D,MAAM,GAAG,CAAC,CAAC,CAAA;EAClD;;ECxDA;EACA,IAAIuD,EAAE,GAAG,CAAC,CAAA;;EAEV;EACA;EACA;EACA;EACA;EAJA,IAKqBvC,OAAO,gBAAA,YAAA;IAC1B,SAAYV,OAAAA,CAAAA,EAAE,EAAE4D,QAAQ,EAAEzB,EAAE,EAAEnD,OAAO,EAAE6E,eAAe,EAAE;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;MACtD,IAAI,CAAC7D,EAAE,GAAGA,EAAE,CAAA;EACZ,IAAA,IAAI6D,eAAe,EAAE;QACnB7D,EAAE,CAAC+C,QAAQ,GAAG,IAAI,CAAA;EACpB,KAAA;EACA,IAAA,IAAI/D,OAAO,EAAE;QACX,IAAI,CAAC8E,IAAI,GAAG,CAAC,CAAC9E,OAAO,CAAC8E,IAAI,CAAC;QAC3B,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC/E,OAAO,CAAC+E,IAAI,CAAC;EAC7B,KAAC,MAAM;EACL,MAAA,IAAI,CAACD,IAAI,GAAG,IAAI,CAACC,IAAI,GAAG,KAAK,CAAA;EAC/B,KAAA;EACA,IAAA,IAAI,CAAC/E,OAAO,GAAGA,OAAO,CAAC;EACvB,IAAA,IAAI,CAACmD,EAAE,GAAGA,EAAE,CAAC;EACb,IAAA,IAAI,CAACc,EAAE,GAAGA,EAAE,EAAE,CAAC;EACf,IAAA,IAAI,CAACe,KAAK,GAAG,IAAI,CAACD,IAAI,CAAC;EACvB,IAAA,IAAI,CAACE,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAC;MACxB,IAAI,CAACP,QAAQ,GAAGA,QAAQ,CAAA;EACxB;EACA,IAAA,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;QAClC,IAAI,CAACQ,MAAM,GAAGR,QAAQ,CAAA;EACxB,KAAC,MAAM;EACL;QACA,IAAI,CAACQ,MAAM,GAAG,YAAY;UACxB,IAAI7G,GAAG,GAAGyC,EAAE,CAAA;EACZ,QAAA,IAAIqE,QAAQ,GAAGT,QAAQ,CAACpE,KAAK,CAAC,GAAG,CAAC,CAAA;EAClC,QAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4E,QAAQ,CAAC3E,MAAM,EAAED,CAAC,EAAE,EAAE;YACxClC,GAAG,GAAGA,GAAG,CAAC8G,QAAQ,CAAC5E,CAAC,CAAC,CAAC,CAAC;EACzB,SAAA;;EACA,QAAA,OAAOlC,GAAG,CAAA;SACX,CAAA;EACH,KAAA;EACA;EACA,IAAA,IAAI,CAAC+G,KAAK,GAAG,IAAI,CAACP,IAAI,GAAGQ,SAAS,GAAG,IAAI,CAACC,GAAG,EAAE,CAAA;EACjD,GAAA;;EAEA;EACF;EACA;EAFE,EAAA,YAAA,CAAA,OAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,KAAA;EAAA,IAAA,KAAA,EAGA,SAAM,GAAA,GAAA;EACJ;QACAf,UAAU,CAAC,IAAI,CAAC,CAAA;EAChB,MAAA,IAAIa,KAAK,CAAA;EACT,MAAA,IAAMtE,EAAE,GAAG,IAAI,CAACA,EAAE,CAAA;EAClB;EACJ;EACA;EACA;QACIsE,KAAK,GAAG,IAAI,CAACF,MAAM,CAACvD,IAAI,CAACb,EAAE,CAAC,CAAA;EAC5B;EACA0D,MAAAA,SAAS,EAAE,CAAA;EACX,MAAA,OAAOY,KAAK,CAAA;EACd,KAAA;;EAEA;EACF;EACA;EACA;EAHE,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;MAAA,KAIA,EAAA,SAAA,MAAA,CAAOG,GAAG,EAAE;EACV,MAAA,IAAMxB,EAAE,GAAGwB,GAAG,CAACxB,EAAE,CAAA;QACjB,IAAI,CAAC,IAAI,CAACiB,MAAM,CAAC5B,GAAG,CAACW,EAAE,CAAC,EAAE;EACxB,QAAA,IAAI,CAACiB,MAAM,CAACQ,GAAG,CAACzB,EAAE,CAAC,CAAA;EACnB,QAAA,IAAI,CAACgB,IAAI,CAAC7B,IAAI,CAACqC,GAAG,CAAC,CAAA;EACnB;EACAA,QAAAA,GAAG,CAACE,MAAM,CAAC,IAAI,CAAC,CAAA;EAClB,OAAA;EACF,KAAA;;EAEA;EACF;EACA;EACA;EACE;EAAA,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EACA,SAAS,MAAA,GAAA;EACP;QACA,IAAI,IAAI,CAACZ,IAAI,EAAE;UACb,IAAI,CAACC,KAAK,GAAG,IAAI,CAAA;EACnB,OAAC,MAAM;EACL;EACA;UACAhB,YAAY,CAAC,IAAI,CAAC,CAAA;EACpB,OAAA;EACF,KAAA;;EAEA;EACF;EACA;EACA;EAHE,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,KAAA;EAAA,IAAA,KAAA,EAIA,SAAM,GAAA,GAAA;EACJ,MAAA,IAAM4B,MAAM,GAAG,IAAI,CAACJ,GAAG,EAAE,CAAC;EAC1B,MAAA,IAAMK,MAAM,GAAG,IAAI,CAACP,KAAK,CAAC;QAC1B,IAAI,CAACA,KAAK,GAAGM,MAAM,CAAA;QACnB,IAAI,IAAI,CAACd,IAAI,EAAE;UACb,IAAIc,MAAM,KAAKC,MAAM,IAAIvH,QAAQ,CAACsH,MAAM,CAAC,EAAE;EACzC,UAAA,IAAI,CAACzC,EAAE,CAACtB,IAAI,CAAC,IAAI,CAACb,EAAE,EAAE4E,MAAM,EAAEC,MAAM,CAAC,CAAA;EACvC,SAAA;EACF,OAAC,MAAM;EACL;UACA,IAAI,CAAC1C,EAAE,CAACtB,IAAI,CAAC,IAAI,CAACb,EAAE,CAAC,CAAA;EACvB,OAAA;EACF,KAAA;;EAEA;EACF;EACA;EACA;EAHE,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,UAAA;EAAA,IAAA,KAAA,EAIA,SAAW,QAAA,GAAA;EACT,MAAA,IAAI,CAACsE,KAAK,GAAG,IAAI,CAACE,GAAG,EAAE,CAAA;QACvB,IAAI,CAACR,KAAK,GAAG,KAAK,CAAA;EACpB,KAAA;;EAEA;EACF;EACA;EAFE,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EAGA,SAAS,MAAA,GAAA;EACP;EACA,MAAA,IAAIvE,CAAC,GAAG,IAAI,CAACwE,IAAI,CAACvE,MAAM,CAAA;QACxB,OAAOD,CAAC,EAAE,EAAE;EACV;EACA,QAAA,IAAI,CAACwE,IAAI,CAACxE,CAAC,CAAC,CAACqF,MAAM,EAAE,CAAA;EACvB,OAAA;EACF,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,OAAA,CAAA;EAAA,CAAA,EAAA;;ECtIH;EACA,IAAMC,UAAU,GAAG3G,KAAK,CAACyB,SAAS,CAAA;EAClC;EACA;EACO,IAAMmF,YAAY,GAAGtG,MAAM,CAACC,MAAM,CAACoG,UAAU,CAAC,CAAA;EAErD,IAAME,cAAc,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAA;;EAEvF;EACA;EACA;EACAA,cAAc,CAAC3G,OAAO,CAAC,UAAU4G,MAAM,EAAE;EACvC;EACA,EAAA,IAAMC,QAAQ,GAAGJ,UAAU,CAACG,MAAM,CAAC,CAAA;EACnCF,EAAAA,YAAY,CAACE,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANE,IAAI,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAAJA,IAAI,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;EACtC;MACA,IAAMC,MAAM,GAAGF,QAAQ,CAACG,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAA;EACzC;EACA;EACA,IAAA,IAAMG,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACtB,IAAA,IAAIC,QAAQ,CAAA;EACZ,IAAA,QAAQP,MAAM;EACZ,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACZO,QAAAA,QAAQ,GAAGL,IAAI,CAAA;EACf,QAAA,MAAA;EACF,MAAA,KAAK,QAAQ;EACXK,QAAAA,QAAQ,GAAGL,IAAI,CAACvC,KAAK,CAAC,CAAC,CAAC,CAAA;EAElB,KAAA;EAEV;EACA,IAAA,IAAI4C,QAAQ,EAAEF,EAAE,CAACG,YAAY,CAACD,QAAQ,CAAC,CAAA;EACvC;EACA;EACAF,IAAAA,EAAE,CAACd,GAAG,CAACkB,MAAM,EAAE,CAAA;EACf,IAAA,OAAON,MAAM,CAAA;KACd,CAAA;EACH,CAAC,CAAC;;ECrCqC,IAEjCO,QAAQ,gBAAA,YAAA;EACZ,EAAA,SAAA,QAAA,CAAYtB,KAAK,EAAE;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;MACjB,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAA;EAClB,IAAA,IAAI,CAACG,GAAG,GAAG,IAAIvB,GAAG,EAAE,CAAA;;EAEpB;EACAxE,IAAAA,MAAM,CAACmH,cAAc,CAACvB,KAAK,EAAE,QAAQ,EAAE;EACrCA,MAAAA,KAAK,EAAE,IAAI;EAAE;EACbwB,MAAAA,UAAU,EAAE,KAAK;EAAE;EACnBC,MAAAA,QAAQ,EAAE,IAAI;EACdC,MAAAA,YAAY,EAAE,IAAA;EAChB,KAAC,CAAC,CAAA;EAEF,IAAA,IAAI5H,KAAK,CAACC,OAAO,CAACiG,KAAK,CAAC,EAAE;EACxB;EACA;EACA2B,MAAAA,YAAY,CAAC3B,KAAK,EAAEU,YAAY,CAAC,CAAA;EACjC;EACA,MAAA,IAAI,CAACU,YAAY,CAACpB,KAAK,CAAC,CAAA;EAC1B,KAAC,MAAM;EACL,MAAA,IAAI,CAAC4B,IAAI,CAAC5B,KAAK,CAAC,CAAA;EAClB,KAAA;EACF,GAAA;;EAEA;EACF;EACA;EACA;EACA;EAJE,EAAA,YAAA,CAAA,QAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,MAAA;MAAA,KAKA,EAAA,SAAA,IAAA,CAAK/G,GAAG,EAAE;EACR;EACA,MAAA,IAAM4I,IAAI,GAAGzH,MAAM,CAACyH,IAAI,CAAC5I,GAAG,CAAC,CAAA;EAC7B,MAAA,KAAK,IAAIkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0G,IAAI,CAACzG,MAAM,EAAED,CAAC,EAAE,EAAE;EACpC,QAAA,IAAI9B,GAAG,GAAGwI,IAAI,CAAC1G,CAAC,CAAC,CAAA;EACjB,QAAA,IAAI6E,KAAK,GAAG/G,GAAG,CAACI,GAAG,CAAC,CAAA;EACpByI,QAAAA,cAAc,CAAC7I,GAAG,EAAEI,GAAG,EAAE2G,KAAK,CAAC,CAAA;EACjC,OAAA;EACF,KAAA;;EAEA;EACF;EACA;EAFE,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,cAAA;MAAA,KAGA,EAAA,SAAA,YAAA,CAAa+B,KAAK,EAAE;EAClB,MAAA,KAAK,IAAI5G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4G,KAAK,CAAC3G,MAAM,EAAED,CAAC,EAAE,EAAE;EACrCoC,QAAAA,OAAO,CAACwE,KAAK,CAAC5G,CAAC,CAAC,CAAC,CAAA;EACnB,OAAA;EACF,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,QAAA,CAAA;EAAA,CAGH,EAAA,CAAA;EAEA;EACA;EACA;EACA;EACA,SAASwG,YAAY,CAAC7C,MAAM,EAAEkD,GAAG,EAAE;IACjClD,MAAM,CAACmD,SAAS,GAAGD,GAAG,CAAA;EACxB,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACO,SAASzE,OAAO,CAACyC,KAAK,EAAE;EAC7B;IACA,IAAI,OAAA,CAAOA,KAAK,CAAK,KAAA,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;EAC/C,IAAA,OAAA;EACF,GAAA;EACA,EAAA,OAAO,IAAIsB,QAAQ,CAACtB,KAAK,CAAC,CAAA;EAC5B,CAAA;;EAEA;EACA;EACA;EACA;EACA,SAAS8B,cAAc,CAAC7I,GAAG,EAAEI,GAAG,EAAE2G,KAAK,EAAE;EACvC;EACA,EAAA,IAAIG,GAAG,GAAG,IAAIvB,GAAG,EAAE,CAAA;;EAEnB;EACA,EAAA,IAAIsD,OAAO,GAAG3E,OAAO,CAACyC,KAAK,CAAC,CAAA;EAC5B5F,EAAAA,MAAM,CAACmH,cAAc,CAACtI,GAAG,EAAEI,GAAG,EAAE;EAC9BmI,IAAAA,UAAU,EAAE,IAAI;EAChBE,IAAAA,YAAY,EAAE,IAAI;MAClBxB,GAAG,EAAE,SAASiC,cAAc,GAAG;EAC7B;QACA,IAAIvD,GAAG,CAACE,MAAM,EAAE;EACd;UACAqB,GAAG,CAACK,MAAM,EAAE,CAAA;EACZ;EACA;EACA,QAAA,IAAI0B,OAAO,EAAE;EACXA,UAAAA,OAAO,CAAC/B,GAAG,CAACK,MAAM,EAAE,CAAA;EACpB,UAAA,IAAI1G,KAAK,CAACC,OAAO,CAACiG,KAAK,CAAC,EAAE;EACxB;EACA;EACA;EACA,YAAA,SAAA;cACAoC,WAAW,CAACpC,KAAK,CAAC,CAAA;EACpB,WAAA;EACF,SAAA;EACF,OAAA;EACA,MAAA,OAAOA,KAAK,CAAA;OACb;EACDqC,IAAAA,GAAG,EAAE,SAASC,cAAc,CAACC,QAAQ,EAAE;QACrC,IAAIA,QAAQ,KAAKvC,KAAK,EAAE;EACtB,QAAA,OAAA;EACF,OAAA;EACAA,MAAAA,KAAK,GAAGuC,QAAQ,CAAA;EAChB;EACAL,MAAAA,OAAO,GAAG3E,OAAO,CAACgF,QAAQ,CAAC,CAAA;EAC3B;QACApC,GAAG,CAACkB,MAAM,EAAE,CAAA;EACd,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA,SAASe,WAAW,CAACpC,KAAK,EAAE;EAC1B,EAAA,KAAK,IAAIwC,CAAC,EAAErH,CAAC,GAAG,CAAC,EAAE6D,CAAC,GAAGgB,KAAK,CAAC5E,MAAM,EAAED,CAAC,GAAG6D,CAAC,EAAE7D,CAAC,EAAE,EAAE;EAC/CqH,IAAAA,CAAC,GAAGxC,KAAK,CAAC7E,CAAC,CAAC,CAAA;EACZ;EACAqH,IAAAA,CAAC,IAAIA,CAAC,CAACtB,MAAM,IAAIsB,CAAC,CAACtB,MAAM,CAACf,GAAG,CAACK,MAAM,EAAE,CAAA;EACtC;EACA,IAAA,IAAI1G,KAAK,CAACC,OAAO,CAACyI,CAAC,CAAC,EAAE;QACpBJ,WAAW,CAACI,CAAC,CAAC,CAAA;EAChB,KAAA;EACF,GAAA;EACF;;ECnIA,IAAMC,wBAAwB,GAAG;EAC/BjB,EAAAA,UAAU,EAAE,IAAI;EAChBE,EAAAA,YAAY,EAAE,IAAI;EAClBxB,EAAAA,GAAG,EAAE5G,IAAI;EACT+I,EAAAA,GAAG,EAAE/I,IAAAA;EACP,CAAC,CAAA;EAEM,SAASoJ,KAAK,CAAC5D,MAAM,EAAE6D,SAAS,EAAEtJ,GAAG,EAAE;EAC5Ce,EAAAA,MAAM,CAACmH,cAAc,CAACzC,MAAM,EAAEzF,GAAG,EAAE;EACjC6G,IAAAA,GAAG,EAAG,SAAA,GAAA,GAAA;EACJ,MAAA,OAAOpB,MAAM,CAAC6D,SAAS,CAAC,CAACtJ,GAAG,CAAC,CAAA;OAC9B;MACDgJ,GAAG,EAAA,SAAA,GAAA,CAACO,GAAG,EAAE;EACP9D,MAAAA,MAAM,CAAC6D,SAAS,CAAC,CAACtJ,GAAG,CAAC,GAAGuJ,GAAG,CAAA;EAC9B,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;;EAEA;EACO,SAASC,SAAS,CAACnH,EAAE,EAAE;EAC5B,EAAA,IAAMoH,IAAI,GAAGpH,EAAE,CAACY,QAAQ,CAAA;IACxB,IAAIwG,IAAI,CAACC,KAAK,EAAEC,SAAS,CAACtH,EAAE,EAAEoH,IAAI,CAACC,KAAK,CAAC,CAAA;IACzC,IAAID,IAAI,CAACG,OAAO,EAAEC,WAAW,CAACxH,EAAE,EAAEoH,IAAI,CAACG,OAAO,CAAC,CAAA;IAC/C,IAAIH,IAAI,CAACrF,IAAI,EAAE;MACb0F,QAAQ,CAACzH,EAAE,CAAC,CAAA;EACd,GAAA;IACA,IAAIoH,IAAI,CAACM,QAAQ,EAAEC,YAAY,CAAC3H,EAAE,EAAEoH,IAAI,CAACM,QAAQ,CAAC,CAAA;IAClD,IAAIN,IAAI,CAACQ,KAAK,EAAE;EACdC,IAAAA,SAAS,CAAC7H,EAAE,EAAEoH,IAAI,CAACQ,KAAK,CAAC,CAAA;EAC3B,GAAA;EACF,CAAA;EAEA,SAASN,SAAS,GAAG,EAAC;;EAEtB;EACA,SAASG,QAAQ,CAACzH,EAAE,EAAE;EACpB,EAAA,IAAI+B,IAAI,GAAG/B,EAAE,CAACY,QAAQ,CAACmB,IAAI,CAAA;EAC3B;EACA;IACAA,IAAI,GAAG/B,EAAE,CAAC8H,KAAK,GAAG,OAAO/F,IAAI,KAAK,UAAU,GAAGgG,OAAO,CAAChG,IAAI,EAAE/B,EAAE,CAAC,GAAG+B,IAAI,IAAI,EAAE,CAAA;;EAE7E;EACA,EAAA,KAAK,IAAIpE,GAAG,IAAIoE,IAAI,EAAE;EACpBiF,IAAAA,KAAK,CAAChH,EAAE,EAAWrC,OAAAA,EAAAA,GAAG,CAAC,CAAA;EACzB,GAAA;;EAEA;EACAkE,EAAAA,OAAO,CAACE,IAA4B,CAAA,CAAA;EACtC,CAAA;;EAEA,SAASgG,OAAO,CAAChG,IAAI,EAAE/B,EAAE,EAAE;IACzB,IAAI;EACF,IAAA,OAAO+B,IAAI,CAAClB,IAAI,CAACb,EAAE,EAAEA,EAAE,CAAC,CAAA;KACzB,CAAC,OAAO8G,CAAC,EAAE;EACV,IAAA,OAAO,EAAE,CAAA;EACX,GAAA;EACF,CAAA;EAEA,IAAMkB,sBAAsB,GAAG;EAAEjE,EAAAA,IAAI,EAAE,IAAA;EAAK,CAAC,CAAA;EAE7C,SAAS4D,YAAY,CAAC3H,EAAE,EAAE0H,QAAQ,EAAE;EAClC;EACA,EAAA,IAAMO,QAAQ,GAAIjI,EAAE,CAACkI,iBAAiB,GAAG,EAAG,CAAA;EAE5C,EAAA,KAAK,IAAIvK,GAAG,IAAI+J,QAAQ,EAAE;EACxB;EACA,IAAA,IAAMS,OAAO,GAAGT,QAAQ,CAAC/J,GAAG,CAAC,CAAA;MAC7B,IAAMyG,MAAM,GAAG,OAAO+D,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAGA,OAAO,CAAC3D,GAAG,CAAA;EACpE;EACAyD,IAAAA,QAAQ,CAACtK,GAAG,CAAC,GAAG,IAAI+C,OAAO,CAACV,EAAE,EAAEoE,MAAM,IAAIxG,IAAI,EAAEA,IAAI,EAAEoK,sBAAsB,CAAC,CAAA;EAC7EI,IAAAA,cAAc,CAACpI,EAAE,EAAErC,GAAG,EAAEwK,OAAO,CAAC,CAAA;EAClC,GAAA;EACF,CAAA;EAEA,SAASC,cAAc,CAAChF,MAAM,EAAEzF,GAAG,EAAEwK,OAAO,EAAE;EAC5C;EACA,EAAA,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;EACjCpB,IAAAA,wBAAwB,CAACvC,GAAG,GAAG6D,oBAAoB,CAAC1K,GAAG,CAAC,CAAA;MACxDoJ,wBAAwB,CAACJ,GAAG,GAAG/I,IAAI,CAAA;EACrC,GAAC,MAAM;EACLmJ,IAAAA,wBAAwB,CAACvC,GAAG,GAAG6D,oBAAoB,CAAC1K,GAAG,CAAC,CAAA;EACxDoJ,IAAAA,wBAAwB,CAACJ,GAAG,GAAGwB,OAAO,CAACxB,GAAG,IAAI/I,IAAI,CAAA;EACpD,GAAA;IACAc,MAAM,CAACmH,cAAc,CAACzC,MAAM,EAAEzF,GAAG,EAAEoJ,wBAAwB,CAAC,CAAA;EAC9D,CAAA;EAEA,SAASsB,oBAAoB,CAAC1K,GAAG,EAAE;IACjC,OAAO,SAAS2K,cAAc,GAAG;EAC/B;MACA,IAAM7F,OAAO,GAAG,IAAI,CAACyF,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACvK,GAAG,CAAC,CAAA;EACrE,IAAA,IAAI8E,OAAO,EAAE;EACX;QACA,IAAIA,OAAO,CAACuB,KAAK,EAAE;UACjBvB,OAAO,CAAC8F,QAAQ,EAAE,CAAA;EACpB,OAAA;EACA;QACA,IAAIrF,GAAG,CAACE,MAAM,EAAE;UACdX,OAAO,CAACqC,MAAM,EAAE,CAAA;EAClB,OAAA;QACA,OAAOrC,OAAO,CAAC6B,KAAK,CAAA;EACtB,KAAA;KACD,CAAA;EACH,CAAA;EAEA,SAASkD,WAAW,GAAG,EAAC;;EAExB;EACA,SAASK,SAAS,CAAC7H,EAAE,EAAE4H,KAAK,EAAE;IAAA,IACL,KAAA,GAAA,SAAA,KAAA,CAAA,GAAA,EAAA;EACrB,IAAA,IAAMY,OAAO,GAAGZ,KAAK,CAACjK,GAAG,CAAC,CAAA;EAC1B;EACA,IAAA,IAAIS,KAAK,CAACC,OAAO,CAACmK,OAAO,CAAC,EAAE;EAC1BA,MAAAA,OAAO,CAAClK,OAAO,CAAC,UAACmK,IAAI,EAAK;EACxBC,QAAAA,aAAa,CAAC1I,EAAE,EAAErC,GAAG,EAAE8K,IAAI,CAAC,CAAA;EAC9B,OAAC,CAAC,CAAA;EACJ,KAAC,MAAM;EACLC,MAAAA,aAAa,CAAC1I,EAAE,EAAErC,GAAG,EAAE6K,OAAO,CAAC,CAAA;EACjC,KAAA;KACD,CAAA;IAVD,KAAK,IAAI7K,GAAG,IAAIiK,KAAK,EAAA;EAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA;EAAA,GAAA;EAWvB,CAAA;EAEA,SAASc,aAAa,CAAC1I,EAAE,EAAE2I,OAAO,EAAEH,OAAO,EAAgB;IAAA,IAAdxJ,OAAO,GAAG,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAE,CAAA;EACvD,EAAA,IAAI,OAAOwJ,CAAAA,OAAO,CAAK,KAAA,QAAQ,EAAE;EAC/B;EACAxJ,IAAAA,OAAO,GAAGwJ,OAAO,CAAA;EACjB;MACAA,OAAO,GAAGA,OAAO,CAACA,OAAO,CAAA;EAC3B,GAAA;EACA,EAAA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;EAC/BA,IAAAA,OAAO,GAAGxI,EAAE,CAACwI,OAAO,CAAC,CAAA;EACvB,GAAA;IACA,OAAOxI,EAAE,CAAC4I,MAAM,CAACD,OAAO,EAAEH,OAAO,EAAExJ,OAAO,CAAC,CAAA;EAC7C,CAAA;EAEO,SAAS6J,UAAU,CAACjJ,GAAG,EAAE;IAC9BA,GAAG,CAACC,SAAS,CAAC+I,MAAM,GAAG,UAAUD,OAAO,EAAExG,EAAE,EAAgB;MAAA,IAAdnD,OAAO,GAAG,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAE,CAAA;MACxD,IAAMgB,EAAE,GAAG,IAAI,CAAA;MACfhB,OAAO,CAAC8E,IAAI,GAAG,IAAI,CAAA;EACnB;EACA,IAAc,IAAIpD,OAAO,CAACV,EAAE,EAAE2I,OAAO,EAAExG,EAAE,EAAEnD,OAAO,EAAC;MACnD,IAAIA,OAAO,CAAC8J,SAAS,EAAE;EACrB3G,MAAAA,EAAE,EAAE,CAAA;EACN,KAAA;KACD,CAAA;EACH;;ECrJA;EAAA,IACqB4G,KAAK,gBAAA,YAAA,CACxB,SAAYC,KAAAA,CAAAA,GAAG,EAAEjH,IAAI,EAAEkH,QAAQ,EAAEC,IAAI,EAAEC,gBAAgB,EAAE;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;IACvD,IAAI,CAACH,GAAG,GAAGA,GAAG,CAAA;IACd,IAAI,CAACjH,IAAI,GAAGA,IAAI,CAAA;IAChB,IAAI,CAACkH,QAAQ,GAAGA,QAAQ,CAAA;IACxB,IAAI,CAACC,IAAI,GAAGA,IAAI,CAAA;EAChB,EAAA,IAAI,CAACvL,GAAG,GAAGoE,IAAI,IAAIA,IAAI,CAACpE,GAAG,CAAA;IAC3B,IAAI,CAACwL,gBAAgB,GAAGA,gBAAgB,CAAA;IACxC,IAAI,CAACrK,MAAM,GAAGyF,SAAS,CAAA;EACzB,CAAC,CAAA,CAAA;EAGI,SAAS6E,eAAe,CAACF,IAAI,EAAE;IACpC,OAAO,IAAIH,KAAK,CAACxE,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE2E,IAAI,CAAC,CAAA;EACzD;;ECZO,SAASG,eAAe,CAACC,IAAI,EAAEvH,IAAI,EAAEwH,OAAO,EAAEN,QAAQ,EAAED,GAAG,EAAE;EAClE,EAAA,IAAMQ,QAAQ,GAAGD,OAAO,CAAC3I,QAAQ,CAAC6I,KAAK,CAAA;EAEvC,EAAA,IAAInM,QAAQ,CAACgM,IAAI,CAAC,EAAE;EAClBA,IAAAA,IAAI,GAAGE,QAAQ,CAAChM,MAAM,CAAC8L,IAAI,CAAC,CAAA;EAC9B,GAAA;EAEAvH,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAE,CAAA;;EAEjB;IACA2H,qBAAqB,CAAC3H,IAAI,CAAC,CAAA;;EAE3B;EACA;IACA,IAAM4H,IAAI,GAAGX,GAAG,CAAA;EAChB,EAAA,IAAMjJ,KAAK,GAAG,IAAIgJ,KAAK,CAAA,gBAAA,CAAA,MAAA,CAAkBO,IAAI,CAACM,GAAG,EAAID,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAAI,GAAI5H,IAAI,EAAEwC,SAAS,EAAEA,SAAS,EAAE;EACvF+E,IAAAA,IAAI,EAAJA,IAAI;EACJN,IAAAA,GAAG,EAAHA,GAAG;EACHC,IAAAA,QAAQ,EAARA,QAAAA;EACF,GAAC,CAAC,CAAA;EAEF,EAAA,OAAOlJ,KAAK,CAAA;EACd,CAAA;EAEA,SAAS2J,qBAAqB,CAAC3H,IAAI,EAAE;EACnC;IACAA,IAAI,CAACxD,IAAI,GAAG;EACV;MACAsL,IAAI,EAAA,SAAA,IAAA,CAAC9J,KAAK,EAAE;EACV,MAAA,SAAA;EACA;EACA,MAAA,IAAMhB,KAAK,GAAIgB,KAAK,CAAC+J,iBAAiB,GAAG,IAAI/J,KAAK,CAACoJ,gBAAgB,CAACG,IAAI,CAAC;EAAES,QAAAA,YAAY,EAAE,IAAA;EAAK,OAAC,CAAE,CAAA;EACjG;QACAhL,KAAK,CAACiL,MAAM,EAAE,CAAA;EAChB,KAAA;KACD,CAAA;EACH;;ECnCA;EACO,SAASC,aAAa,CAACV,OAAO,EAAEP,GAAG,EAA0B;IAAA,IAAxBjH,IAAI,GAAG,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAE,CAAA;EACnD,EAAA,IAAIhC,KAAK,CAAA;EAAC,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAD8CkJ,QAAQ,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAARA,QAAQ,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;EAEhE,EAAA,IAAI9J,aAAa,CAAC6J,GAAG,CAAC,EAAE;EACtB;EACA;MACAjJ,KAAK,GAAG,IAAIgJ,KAAK,CAACC,GAAG,EAAEjH,IAAI,EAAEkH,QAAQ,CAAC,CAAA;EACxC,GAAC,MAAM;EACL;EACA;MACA,IAAIK,IAAI,GAAGC,OAAO,CAAC3I,QAAQ,CAACsJ,UAAU,CAAClB,GAAG,CAAC,CAAA;EAC3CjJ,IAAAA,KAAK,GAAGsJ,eAAe,CAACC,IAAI,EAAEvH,IAAI,EAAEwH,OAAO,EAAEN,QAAQ,EAAED,GAAG,CAAC,CAAA;EAC7D,GAAA;EACA,EAAA,OAAOjJ,KAAK,CAAA;EACd;;ECfA;EACO,SAASoK,oBAAoB,CAAC/G,MAAM,EAAE;EAC3C;IACAA,MAAM,CAACgH,EAAE,GAAG,YAAmB;EAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANhF,IAAI,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAAJA,IAAI,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;EAC3B,IAAA,OAAO6E,aAAa,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC,IAAI,CAAA,CAAA,MAAA,CAAK7E,IAAI,CAAC,CAAA,CAAA;KACpC,CAAA;;EAED;EACAhC,EAAAA,MAAM,CAACiH,EAAE,GAAG,UAAUnD,GAAG,EAAE;EACzB,IAAA,OAAOA,GAAG,KAAK,IAAI,GAAG,EAAE,GAAG,QAAOA,GAAG,CAAA,KAAK,QAAQ,GAAGoD,IAAI,CAACC,SAAS,CAACrD,GAAG,CAAC,GAAGA,GAAG,CAAA;KAC/E,CAAA;;EAED;IACA9D,MAAM,CAACoH,EAAE,GAAGpB,eAAe,CAAA;EAC7B;;ECbO,SAASqB,UAAU,CAACzK,EAAE,EAAE;EAC7B;EACA;IACAA,EAAE,CAAC0K,cAAc,GAAG,UAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;MAAA,OAAKb,aAAa,CAACjK,EAAE,EAAE2K,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,CAAA;EAAA,GAAA,CAAA;EACnE,CAAA;EAEO,SAASC,WAAW,CAACnL,GAAG,EAAE;EAC/BuK,EAAAA,oBAAoB,CAACvK,GAAG,CAACC,SAAS,CAAC,CAAA;;EAEnC;EACAD,EAAAA,GAAG,CAACC,SAAS,CAACmL,SAAS,GAAG9I,QAAQ,CAAA;EAElCtC,EAAAA,GAAG,CAACC,SAAS,CAACY,OAAO,GAAG,YAAY;MAClC,IAAMT,EAAE,GAAG,IAAI,CAAA;EACf;EACA,IAAA,IAAQiL,MAAM,GAAKjL,EAAE,CAACY,QAAQ,CAAtBqK,MAAM,CAAA;;EAEd;MACA,IAAMlL,KAAK,GAAGkL,MAAM,CAACpK,IAAI,CAACb,EAAE,EAAEA,EAAE,CAAC0K,cAAc,CAAC,CAAA;EAChD,IAAA,OAAO3K,KAAK,CAAA;KACb,CAAA;EACH;;ECpBO,SAASmL,WAAS,CAACtL,GAAG,EAAE;EAC7BA,EAAAA,GAAG,CAACC,SAAS,CAACsL,KAAK,GAAG,UAAUnM,OAAO,EAAE;MACvC,IAAMgB,EAAE,GAAG,IAAI,CAAA;;EAEf;EACA;EACAA,IAAAA,EAAE,CAACY,QAAQ,GAAG/B,YAAY,CAACmB,EAAE,CAACoL,WAAW,CAACpM,OAAO,EAAEA,OAAO,CAAC,CAAA;MAC3DyL,UAAU,CAACzK,EAAE,CAAC,CAAA;EACdO,IAAAA,QAAQ,CAACP,EAAE,EAAE,cAAc,CAAC,CAAA;EAC5BmH,IAAAA,SAAS,CAACnH,EAAE,CAAC,CAAC;EACdO,IAAAA,QAAQ,CAACP,EAAE,EAAE,SAAS,CAAC,CAAA;;EAEvB;EACA,IAAA,IAAIA,EAAE,CAACY,QAAQ,CAACN,EAAE,EAAE;QAClBN,EAAE,CAACgK,MAAM,CAAChK,EAAE,CAACY,QAAQ,CAACN,EAAE,CAAC,CAAA;EAC3B,KAAA;KACD,CAAA;EACH;;ECjBA;EACA,SAASV,GAAG,CAACZ,OAAO,EAAE;EACpB;EACA,EAAA,IAAI,CAACmM,KAAK,CAACnM,OAAO,CAAC,CAAA;EACrB,CAAA;;EAEA;EACA;AACAkM,aAAS,CAACtL,GAAG,CAAC,CAAA;EACdiJ,UAAU,CAACjJ,GAAG,CAAC,CAAA;EACfD,cAAc,CAACC,GAAG,CAAC,CAAA;EACnBmL,WAAW,CAACnL,GAAG,CAAC;;ECdT,SAASsL,SAAS,CAACtL,GAAG,EAAE;EAC7BA,EAAAA,GAAG,CAACyL,KAAK,GAAG,UAAUA,KAAK,EAAE;EAC3B;MACA,IAAI,CAACrM,OAAO,GAAGH,YAAY,CAAC,IAAI,CAACG,OAAO,EAAEqM,KAAK,CAAC,CAAA;EAChD,IAAA,OAAO,IAAI,CAAA;KACZ,CAAA;EACH;;ECNO,SAASC,UAAU,CAAC1L,GAAG,EAAE;IAC9B,IAAIgK,GAAG,GAAG,CAAC,CAAA;;EAEX;IACAhK,GAAG,CAACpC,MAAM,GAAG,YAA8B;MAAA,IAApB+N,aAAa,GAAG,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAE,CAAA;MACvC,IAAMC,KAAK,GAAG,IAAI,CAAA;;EAElB;EACA,IAAA,IAAMC,GAAG,GAAG,SAASC,YAAY,CAAC1M,OAAO,EAAE;EACzC,MAAA,IAAI,CAACmM,KAAK,CAACnM,OAAO,CAAC,CAAA;OACpB,CAAA;EACDyM,IAAAA,GAAG,CAAC5L,SAAS,GAAGnB,MAAM,CAACC,MAAM,CAAC6M,KAAK,CAAC3L,SAAS,CAAC,CAAC;EAC/C4L,IAAAA,GAAG,CAAC5L,SAAS,CAACuL,WAAW,GAAGK,GAAG,CAAC;EAChCA,IAAAA,GAAG,CAAC7B,GAAG,GAAGA,GAAG,EAAE,CAAC;EAChB6B,IAAAA,GAAG,CAACzM,OAAO,GAAGH,YAAY,CAAC2M,KAAK,CAACxM,OAAO,EAAEuM,aAAa,CAAC,CAAC;EACzDE,IAAAA,GAAG,CAAC,OAAO,CAAC,GAAGD,KAAK,CAAA;EACpB,IAAA,OAAOC,GAAG,CAAA;KACX,CAAA;EACH;;EClBO,SAASE,kBAAkB,CAAC/L,GAAG,EAAE;EACtC;EACF;EACA;EACE/B,EAAAA,WAAW,CAACS,OAAO,CAAC,UAACM,IAAI,EAAK;MAC5BgB,GAAG,CAAChB,IAAI,CAAC,GAAG,UAAUqE,EAAE,EAAE2I,UAAU,EAAE;QACpC,IAAIhN,IAAI,KAAK,WAAW,EAAE;EACxB;EACA;EACAgN,QAAAA,UAAU,CAACjC,IAAI,GAAGiC,UAAU,CAACjC,IAAI,IAAI1G,EAAE,CAAA;UACvC2I,UAAU,GAAG,IAAI,CAAC5M,OAAO,CAACyK,KAAK,CAACjM,MAAM,CAACoO,UAAU,CAAC,CAAA;EACpD,OAEA;QACA,IAAI,CAAC5M,OAAO,CAACJ,IAAI,GAAG,GAAG,CAAC,CAACqE,EAAE,CAAC,GAAG2I,UAAU,CAAA;EACzC,MAAA,OAAOA,UAAU,CAAA;OAClB,CAAA;EACH,GAAC,CAAC,CAAA;EACJ;;ECfO,SAASC,aAAa,CAACjM,GAAG,EAAE;EACjCA,EAAAA,GAAG,CAACZ,OAAO,GAAG,EAAE,CAAA;EAChB;EACA;EACAnB,EAAAA,WAAW,CAACS,OAAO,CAAC,UAACM,IAAI,EAAK;MAC5BgB,GAAG,CAACZ,OAAO,CAACJ,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,CAAA;EAC9B,GAAC,CAAC,CAAA;;EAEF;EACAgB,EAAAA,GAAG,CAACZ,OAAO,CAACyK,KAAK,GAAG7J,GAAG,CAAA;IAEvBsL,SAAS,CAACtL,GAAG,CAAC,CAAA;EACd;IACA0L,UAAU,CAAC1L,GAAG,CAAC,CAAA;EACf;IACA+L,kBAAkB,CAAC/L,GAAG,CAAC,CAAA;EACzB;;EClBAiM,aAAa,CAACjM,GAAG,CAAC;;ECHlB;EACA;EACA;EACO,SAASkM,KAAK,CAACxL,EAAE,EAAE;EACxB,EAAA,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;EAC1B,IAAA,IAAMyL,QAAQ,GAAGrK,QAAQ,CAACsK,aAAa,CAAC1L,EAAE,CAAC,CAAA;MAC3C,IAAI,CAACyL,QAAQ,EAAE;EACb,MAAA,OAAOrK,QAAQ,CAACuI,aAAa,CAAC,KAAK,CAAC,CAAA;EACtC,KAAA;EACA,IAAA,OAAO8B,QAAQ,CAAA;EACjB,GAAC,MAAM;EACL,IAAA,OAAOzL,EAAE,CAAA;EACX,GAAA;EACF;;ECXyB,IAAIyI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC;;EAE9C;EACA,SAASkD,SAAS,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACrC,EAAA,OAAOD,QAAQ,CAACvO,GAAG,KAAKwO,QAAQ,CAACxO,GAAG,IAAIuO,QAAQ,CAAClD,GAAG,KAAKmD,QAAQ,CAACnD,GAAG,CAAA;EACvE,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA,SAASoD,iBAAiB,CAACnD,QAAQ,EAAEoD,QAAQ,EAAEC,MAAM,EAAE;IACrD,IAAI7M,CAAC,EAAE9B,GAAG,CAAA;IACV,IAAM2B,GAAG,GAAG,EAAE,CAAA;IACd,KAAKG,CAAC,GAAG4M,QAAQ,EAAE5M,CAAC,IAAI6M,MAAM,EAAE,EAAE7M,CAAC,EAAE;EACnC9B,IAAAA,GAAG,GAAGsL,QAAQ,CAACxJ,CAAC,CAAC,CAAC9B,GAAG,CAAA;EACrB,IAAA,IAAIA,GAAG,EAAE2B,GAAG,CAAC3B,GAAG,CAAC,GAAG8B,CAAC,CAAA;EACvB,GAAA;EACA,EAAA,OAAOH,GAAG,CAAA;EACZ,CAAA;EAEO,SAASiN,mBAAmB,GAAG;EACpC;IACA,SAASC,SAAS,CAACzM,KAAK,EAAE;EACxB,IAAA,IAAMkJ,QAAQ,GAAGlJ,KAAK,CAACkJ,QAAQ,CAAA;EAC/B,IAAA,IAAMD,GAAG,GAAGjJ,KAAK,CAACiJ,GAAG,CAAA;EACrB;EACA,IAAA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;EAC3B;EACA,MAAA,IAAIK,eAAe,CAACtJ,KAAK,CAAC,EAAE;EAC1B,QAAA,OAAOA,KAAK,CAAC+J,iBAAiB,CAAC3J,GAAG,CAAA;EACpC,OAAA;;EAEA;QACAJ,KAAK,CAAC0M,GAAG,GAAG/K,QAAQ,CAACuI,aAAa,CAACjB,GAAG,CAAC,CAAA;EACvC;QACA0D,gBAAgB,CAAC3M,KAAK,CAAC,CAAA;EACvB;EACAkJ,MAAAA,QAAQ,CAAC3K,OAAO,CAAC,UAACS,KAAK,EAAK;UAC1BgB,KAAK,CAAC0M,GAAG,CAACE,WAAW,CAACH,SAAS,CAACzN,KAAK,CAAC,CAAC,CAAA;EACzC,OAAC,CAAC,CAAA;EACJ,KAAC,MAAM;EACL;QACAgB,KAAK,CAAC0M,GAAG,GAAG/K,QAAQ,CAACC,cAAc,CAAC5B,KAAK,CAACmJ,IAAI,CAAC,CAAA;EACjD,KAAA;MACA,OAAOnJ,KAAK,CAAC0M,GAAG,CAAA;EAClB,GAAA;;EAEA;IACA,SAASpD,eAAe,CAACtJ,KAAK,EAAE;EAC9B,IAAA,IAAIN,CAAC,GAAGM,KAAK,CAACgC,IAAI,CAAA;EAClB;EACA,IAAA,IAAI,CAACtC,CAAC,GAAGA,CAAC,CAAClB,IAAI,MAAMkB,CAAC,GAAGA,CAAC,CAACoK,IAAI,CAAC,EAAE;QAChCpK,CAAC,CAACM,KAAK,CAAC,CAAA;EACV,KAAA;EACA;MACA,IAAIA,KAAK,CAAC+J,iBAAiB,EAAE;EAC3B;EACA,MAAA,OAAO,IAAI,CAAA;EACb,KAAA;EACF,GAAA;;EAMA;IACA,SAAS4C,gBAAgB,CAAC3M,KAAK,EAAiB;MAAA,IAAf6M,QAAQ,GAAG,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAE,CAAA;EAC5C;EACA,IAAA,IAAMH,GAAG,GAAG1M,KAAK,CAAC0M,GAAG,CAAA;EACrB,IAAA,IAAMI,QAAQ,GAAG9M,KAAK,CAACgC,IAAI,IAAI,EAAE,CAAA;;EAEjC;EACA,IAAA,KAAK,IAAMpE,GAAG,IAAIiP,QAAQ,EAAE;EAC1B,MAAA,IAAI,CAACC,QAAQ,CAAClP,GAAG,CAAC,EAAE;EAClB8O,QAAAA,GAAG,CAACK,eAAe,CAACnP,GAAG,CAAC,CAAA;EAC1B,OAAA;EACF,KAAA;;EAEA;EACA,IAAA,IAAMoP,QAAQ,GAAGF,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAA;EACrC,IAAA,IAAMC,QAAQ,GAAGL,QAAQ,CAACI,KAAK,IAAI,EAAE,CAAA;EACrC,IAAA,KAAK,IAAMrP,IAAG,IAAIsP,QAAQ,EAAE;EAC1B,MAAA,IAAI,CAACF,QAAQ,CAACpP,IAAG,CAAC,EAAE;EAClB8O,QAAAA,GAAG,CAACO,KAAK,CAACrP,IAAG,CAAC,GAAG,EAAE,CAAA;EACrB,OAAA;EACF,KAAA;;EAEA;EACA,IAAA,KAAK,IAAMA,KAAG,IAAIkP,QAAQ,EAAE;QAC1B,IAAIlP,KAAG,KAAK,OAAO,EAAE;EACnB,QAAA,KAAK,IAAMuP,SAAS,IAAIL,QAAQ,CAACG,KAAK,EAAE;YACtCP,GAAG,CAACO,KAAK,CAACE,SAAS,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACE,SAAS,CAAC,CAAA;EAClD,SAAA;EACF,OAAC,MAAM,IAAIvP,KAAG,KAAK,OAAO,EAAE;EAC1B8O,QAAAA,GAAG,CAACU,SAAS,GAAGN,QAAQ,CAAM,OAAA,CAAA,CAAA;EAChC,OAAC,MAAM;EACL;UACAJ,GAAG,CAACW,YAAY,CAACzP,KAAG,EAAEkP,QAAQ,CAAClP,KAAG,CAAC,CAAC,CAAA;EACtC,OAAA;EACF,KAAA;EACF,GAAA;;EAEA;EACA,EAAA,SAAS0P,cAAc,CAACC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC/C;EACA,IAAA,IAAMC,KAAK,GAAGzN,EAAE,CAACI,SAAS,CAAA;EAE1B,IAAA,IAAIsN,WAAW,GAAG,CAAC,CAAC;EACpB,IAAA,IAAIC,WAAW,GAAG,CAAC,CAAC;MACpB,IAAIC,SAAS,GAAGL,KAAK,CAAC7N,MAAM,GAAG,CAAC,CAAC;EACjC,IAAA,IAAImO,aAAa,GAAGN,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAA,IAAIO,WAAW,GAAGP,KAAK,CAACK,SAAS,CAAC,CAAC;EACnC,IAAA,IAAIG,SAAS,GAAGP,KAAK,CAAC9N,MAAM,GAAG,CAAC,CAAA;EAChC,IAAA,IAAIsO,aAAa,GAAGR,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5B,IAAA,IAAIS,WAAW,GAAGT,KAAK,CAACO,SAAS,CAAC,CAAA;;EAElC;EACA,IAAA,OAAOL,WAAW,IAAIE,SAAS,IAAID,WAAW,IAAII,SAAS,EAAE;EAC3D;QACA,IAAI,CAACF,aAAa,EAAE;EAClBA,QAAAA,aAAa,GAAGN,KAAK,CAAC,EAAEG,WAAW,CAAC,CAAC;EACvC,OAAC,MAAM,IAAI,CAACI,WAAW,EAAE;EACvBA,QAAAA,WAAW,GAAGP,KAAK,CAAC,EAAEK,SAAS,CAAC,CAAA;SACjC,MAAM,IAAI3B,SAAS,CAAC4B,aAAa,EAAEG,aAAa,CAAC,EAAE;EAClD;EACAP,QAAAA,KAAK,CAACI,aAAa,EAAEG,aAAa,CAAC,CAAC;EACpCH,QAAAA,aAAa,GAAGN,KAAK,CAAC,EAAEG,WAAW,CAAC,CAAA;EACpCM,QAAAA,aAAa,GAAGR,KAAK,CAAC,EAAEG,WAAW,CAAC,CAAA;SACrC,MAAM,IAAI1B,SAAS,CAAC6B,WAAW,EAAEG,WAAW,CAAC,EAAE;EAC9C;EACAR,QAAAA,KAAK,CAACK,WAAW,EAAEG,WAAW,CAAC,CAAA;EAC/BH,QAAAA,WAAW,GAAGP,KAAK,CAAC,EAAEK,SAAS,CAAC,CAAA;EAChCK,QAAAA,WAAW,GAAGT,KAAK,CAAC,EAAEO,SAAS,CAAC,CAAA;SACjC,MAAM,IAAI9B,SAAS,CAAC4B,aAAa,EAAEI,WAAW,CAAC,EAAE;EAChD;;EAEA;EACAR,QAAAA,KAAK,CAACI,aAAa,EAAEI,WAAW,CAAC,CAAA;EACjC;EACAX,QAAAA,SAAS,CAACY,YAAY,CAACL,aAAa,CAACpB,GAAG,EAAEqB,WAAW,CAACrB,GAAG,CAAC0B,WAAW,CAAC,CAAA;EACtEN,QAAAA,aAAa,GAAGN,KAAK,CAAC,EAAEG,WAAW,CAAC,CAAA;EACpCO,QAAAA,WAAW,GAAGT,KAAK,CAAC,EAAEO,SAAS,CAAC,CAAA;SACjC,MAAM,IAAI9B,SAAS,CAAC6B,WAAW,EAAEE,aAAa,CAAC,EAAE;EAChD;;EAEA;EACAP,QAAAA,KAAK,CAACK,WAAW,EAAEE,aAAa,CAAC,CAAA;UACjCV,SAAS,CAACY,YAAY,CAACJ,WAAW,CAACrB,GAAG,EAAEoB,aAAa,CAACpB,GAAG,CAAC,CAAA;EAC1DqB,QAAAA,WAAW,GAAGP,KAAK,CAAC,EAAEK,SAAS,CAAC,CAAA;EAChCI,QAAAA,aAAa,GAAGR,KAAK,CAAC,EAAEG,WAAW,CAAC,CAAA;EACtC,OAAC,MAAM;EACL;UACA,IAAIS,WAAW,GAAGhC,iBAAiB,CAACmB,KAAK,EAAEG,WAAW,EAAEE,SAAS,CAAC,CAAA;EAClE;EACA,QAAA,IAAIS,QAAQ,GAAGD,WAAW,CAACJ,aAAa,CAACrQ,GAAG,CAAC,CAAA;UAC7C,IAAI,CAAC0Q,QAAQ,EAAE;EACb;;EAEA;YACAf,SAAS,CAACY,YAAY,CAAC1B,SAAS,CAACwB,aAAa,CAAC,EAAEH,aAAa,CAACpB,GAAG,CAAC,CAAA;EACrE,SAAC,MAAM;EACL;EACA,UAAA,IAAI6B,WAAW,GAAGf,KAAK,CAACc,QAAQ,CAAC,CAAA;EACjC;EACAd,UAAAA,KAAK,CAACc,QAAQ,CAAC,GAAG9J,SAAS,CAAA;EAC3B;YACA+I,SAAS,CAACY,YAAY,CAACI,WAAW,CAAC7B,GAAG,EAAEoB,aAAa,CAACpB,GAAG,CAAC,CAAA;EAC1DgB,UAAAA,KAAK,CAACa,WAAW,EAAEN,aAAa,CAAC,CAAA;EACnC,SAAA;EACA;EACF,OAAA;EACF,KAAA;;MACA,IAAIN,WAAW,GAAGE,SAAS,EAAE;EAC3B;EACA,MAAA,IAAMW,MAAM,GAAG,CAACf,KAAK,CAACO,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,GAAGP,KAAK,CAACO,SAAS,GAAG,CAAC,CAAC,CAACtB,GAAG,CAAA;EACtE;QACA,KAAK,IAAIhN,CAAC,GAAGkO,WAAW,EAAElO,CAAC,IAAIsO,SAAS,EAAEtO,CAAC,EAAE,EAAE;EAC7C6N,QAAAA,SAAS,CAACY,YAAY,CAAC1B,SAAS,CAACgB,KAAK,CAAC/N,CAAC,CAAC,CAAC,EAAE8O,MAAM,CAAC,CAAA;EACrD,OAAA;EACF,KAAC,MAAM,IAAIZ,WAAW,GAAGI,SAAS,EAAE;EAClC;QACA,KAAK,IAAItO,EAAC,GAAGiO,WAAW,EAAEjO,EAAC,IAAImO,SAAS,EAAEnO,EAAC,EAAE,EAAE;EAC7C,QAAA,IAAI+O,EAAE,GAAGjB,KAAK,CAAC9N,EAAC,CAAC,CAAA;UACjB,IAAI,CAAC+O,EAAE,EAAE;EACPlB,UAAAA,SAAS,CAACmB,WAAW,CAACD,EAAE,CAAC/B,GAAG,CAAC,CAAA;EAC/B,SAAA;EACF,OAAA;EACF,KAAA;EACF,GAAA;;EAEA;EACA,EAAA,OAAO,SAASgB,KAAK,CAACvB,QAAQ,EAAEnM,KAAK,EAAE;EACrC,IAAA,SAAA;;EAEA;EACJ;EACA;EACA;EACA;MACI,IAAI,CAACmM,QAAQ,EAAE;EACb;QACA,OAAOM,SAAS,CAACzM,KAAK,CAAC,CAAA;EACzB,KAAC,MAAM;EACL,MAAA,IAAM2O,aAAa,GAAGxC,QAAQ,CAACyC,QAAQ,CAAA;EACvC,MAAA,IAAID,aAAa,EAAE;EACjB;UACA,IAAME,MAAM,GAAG1C,QAAQ,CAAA;EACvB,QAAA,IAAMoB,SAAS,GAAGsB,MAAM,CAACC,UAAU,CAAA;;EAEnC;EACA,QAAA,IAAMpC,GAAG,GAAGD,SAAS,CAACzM,KAAK,CAAC,CAAA;;EAE5B;EACR;EACA;EACA;UACQuN,SAAS,CAACY,YAAY,CAACzB,GAAG,EAAEmC,MAAM,CAACT,WAAW,CAAC,CAAA;EAC/C;EACAb,QAAAA,SAAS,CAACmB,WAAW,CAACvC,QAAQ,CAAC,CAAA;EAC/B,QAAA,OAAOO,GAAG,CAAA;EACZ,OAAC,MAAM;EACL;;EAEA;EACA,QAAA,IAAIP,QAAQ,CAAClD,GAAG,KAAKjJ,KAAK,CAACiJ,GAAG,EAAE;EAC9BkD,UAAAA,QAAQ,CAACO,GAAG,CAACoC,UAAU,CAACC,YAAY,CAACtC,SAAS,CAACzM,KAAK,CAAC,EAAEmM,QAAQ,CAACO,GAAG,CAAC,CAAA;EACtE,SAAA;;EAEA;EACA,QAAA,IAAI,CAACP,QAAQ,CAAClD,GAAG,EAAE;EACjB,UAAA,IAAIkD,QAAQ,CAAChD,IAAI,KAAKnJ,KAAK,CAACmJ,IAAI,EAAE;EAChCgD,YAAAA,QAAQ,CAACO,GAAG,CAACsC,WAAW,GAAGhP,KAAK,CAACmJ,IAAI,CAAA;EACvC,WAAA;EACF,SAAA;;EAEA;EACR;EACA;EACA;UACQ,IAAMuD,IAAG,GAAI1M,KAAK,CAAC0M,GAAG,GAAGP,QAAQ,CAACO,GAAI,CAAA;EACtC;EACAC,QAAAA,gBAAgB,CAAC3M,KAAK,EAAEmM,QAAQ,CAACnK,IAAI,CAAC,CAAA;EAEtC,QAAA,IAAMwL,KAAK,GAAGrB,QAAQ,CAACjD,QAAQ,IAAI,EAAE,CAAA;EACrC,QAAA,IAAMuE,KAAK,GAAGzN,KAAK,CAACkJ,QAAQ,IAAI,EAAE,CAAA;UAClC,IAAIsE,KAAK,CAAC7N,MAAM,GAAG,CAAC,IAAI8N,KAAK,CAAC9N,MAAM,GAAG,CAAC,EAAE;EACxC;EACA2N,UAAAA,cAAc,CAACZ,IAAG,EAAEc,KAAK,EAAEC,KAAK,CAAC,CAAA;EACnC,SAAC,MAAM,IAAID,KAAK,CAAC7N,MAAM,EAAE;EACvB;YACA+M,IAAG,CAACuC,SAAS,GAAG,EAAE,CAAA;EACpB,SAAC,MAAM,IAAIxB,KAAK,CAAC9N,MAAM,EAAE;EACvB;EACA,UAAA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+N,KAAK,CAAC9N,MAAM,EAAED,CAAC,EAAE,EAAE;EACrC,YAAA,IAAMV,KAAK,GAAGyO,KAAK,CAAC/N,CAAC,CAAC,CAAA;EACtBgN,YAAAA,IAAG,CAACE,WAAW,CAACH,SAAS,CAACzN,KAAK,CAAC,CAAC,CAAA;EACnC,WAAA;EACF,SAAA;EACF,OAAA;EACF,KAAA;KACD,CAAA;EACH;;ECvQO,IAAM0O,KAAK,GAAGlB,mBAAmB,EAAE;;ECG1C;EACA3M,GAAG,CAACC,SAAS,CAACO,SAAS,GAAGqN,KAAK,CAAA;EAE/B7N,GAAG,CAACC,SAAS,CAACmK,MAAM,GAAG,UAAU1J,EAAE,EAAE;IACnCA,EAAE,GAAGA,EAAE,GAAGwL,KAAK,CAACxL,EAAE,CAAC,GAAGiE,SAAS,CAAA;EAC/B;EACA,EAAA,OAAOlE,cAAc,CAAC,IAAI,EAAEC,EAAE,CAAC,CAAA;EACjC,CAAC;;ECZD;EACA,IAAM2O,SAAS,GAAG,2EAA2E,CAAA;EAC7F;EACA,IAAMC,MAAM,GAAiC,8BAAA,CAAA;EAC7C;EACA,IAAMC,YAAY,GAAA,MAAA,CAAA,MAAA,CAAUD,MAAM,EAAA,OAAA,CAAA,CAAA,MAAA,CAAQA,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD;EACA,IAAME,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAA,MAAA,CAAMF,YAAY,CAAG,CAAA,CAAA;EACpD;EACA,IAAMG,aAAa,GAAG,YAAY,CAAA;EAClC;EACA,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAAA,OAAA,CAAA,MAAA,CAASF,YAAY,EAAS,QAAA,CAAA,CAAA;;ECXvD;;EAGA;EACA,SAASK,gBAAgB,CAACxG,GAAG,EAAEyG,KAAK,EAAE;IACpC,OAAO;EACL7Q,IAAAA,IAAI,EAAE,CAAC;EACPoK,IAAAA,GAAG,EAAHA,GAAG;EACHyG,IAAAA,KAAK,EAALA,KAAK;EACL3Q,IAAAA,MAAM,EAAE,IAAI;EACZmK,IAAAA,QAAQ,EAAE,EAAA;KACX,CAAA;EACH,CAAA;;EAEA;EACO,SAASyG,KAAK,CAACC,IAAI,EAAE;EAC1B;IACA,IAAIC,KAAK,GAAG,EAAE,CAAA;EACd;EACA,EAAA,IAAIC,IAAI,CAAA;EACR;EACA,EAAA,IAAIC,aAAa,CAAA;EAEjB,EAAA,OAAOH,IAAI,EAAE;EACX;EACA,IAAA,IAAII,OAAO,GAAGJ,IAAI,CAACK,OAAO,CAAC,GAAG,CAAC,CAAA;EAC/B;MACA,IAAID,OAAO,KAAK,CAAC,EAAE;EACjB;QACA,IAAME,aAAa,GAAGC,aAAa,EAAE,CAAA;EACrC,MAAA,IAAID,aAAa,EAAE;EACjB;UACAE,cAAc,CAACF,aAAa,CAAC,CAAA;EAC7B,QAAA,SAAA;EACF,OAAA;;EAEA;EACA,MAAA,IAAMG,WAAW,GAAGT,IAAI,CAACU,KAAK,CAACd,MAAM,CAAC,CAAA;EACtC,MAAA,IAAIa,WAAW,EAAE;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC1Q,MAAM,CAAC,CAAA;EAC9B6Q,QAAAA,YAAY,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EAC5B,QAAA,SAAA;EACF,OAAA;EACF,KAAA;EAEA,IAAA,IAAIlH,IAAI,GAAA,KAAA,CAAA,CAAA;EACR;MACA,IAAI6G,OAAO,IAAI,CAAC,EAAE;EAChB;QACA7G,IAAI,GAAGyG,IAAI,CAACa,SAAS,CAAC,CAAC,EAAET,OAAO,CAAC,CAAA;EACnC,KAAA;EAEA,IAAA,IAAI7G,IAAI,EAAE;EACRoH,MAAAA,OAAO,CAACpH,IAAI,CAACxJ,MAAM,CAAC,CAAA;QACpB+Q,WAAW,CAACvH,IAAI,CAAC,CAAA;EACnB,KAAA;EACF,GAAA;;EAEA;IACA,SAASoH,OAAO,CAACI,CAAC,EAAE;EAClBf,IAAAA,IAAI,GAAGA,IAAI,CAACa,SAAS,CAACE,CAAC,CAAC,CAAA;EAC1B,GAAA;;EAEA;IACA,SAASD,WAAW,CAACvH,IAAI,EAAE;EACzB;MACAA,IAAI,GAAGA,IAAI,CAACyH,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;EAC9B,IAAA,IAAIzH,IAAI,EAAE;EACR4G,MAAAA,aAAa,CAAC7G,QAAQ,CAAC7G,IAAI,CAAC;EAC1BxD,QAAAA,IAAI,EAAE,CAAC;EACPsK,QAAAA,IAAI,EAAJA,IAAAA;EACF,OAAC,CAAC,CAAA;EACJ,KAAA;EACF,GAAA;;EAEA;EACA,EAAA,SAASgH,aAAa,GAAG;EACvB,IAAA,IAAMU,KAAK,GAAGjB,IAAI,CAACU,KAAK,CAACjB,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIwB,KAAK,EAAE;EACT,MAAA,IAAMP,KAAK,GAAG;EACZjR,QAAAA,OAAO,EAAEwR,KAAK,CAAC,CAAC,CAAC;EACjBnB,QAAAA,KAAK,EAAE,EAAA;SACR,CAAA;EACD;EACAa,MAAAA,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,CAAClR,MAAM,CAAC,CAAA;;EAExB;EACA;EACA;QACA,IAAImR,GAAG,EAAEC,IAAI,CAAA;QACb,OAAO,EAAED,GAAG,GAAGlB,IAAI,CAACU,KAAK,CAACf,aAAa,CAAC,CAAC,KAAKwB,IAAI,GAAGnB,IAAI,CAACU,KAAK,CAACpB,SAAS,CAAC,CAAC,EAAE;EAC3EqB,QAAAA,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACpR,MAAM,CAAC,CAAA;EACvBoR,QAAAA,IAAI,GAAG;EACLnH,UAAAA,IAAI,EAAEmH,IAAI,CAAC,CAAC,CAAC;EACb;EACAxM,UAAAA,KAAK,EAAEwM,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;WACpC,CAAA;EACDT,QAAAA,KAAK,CAACZ,KAAK,CAACrN,IAAI,CAAC0O,IAAI,CAAC,CAAA;EACxB,OAAA;EACA,MAAA,IAAID,GAAG,EAAE;EACP;UACAP,OAAO,CAAC,CAAC,CAAC,CAAA;EACV,QAAA,OAAOD,KAAK,CAAA;EACd,OAAA;EACF,KAAA;EACF,GAAA;;EAEA;EACA,EAAA,SAASF,cAAc,CAAqB,IAAA,EAAA;MAAA,IAAlB/Q,OAAO,QAAPA,OAAO;EAAEqQ,MAAAA,KAAK,QAALA,KAAK,CAAA;EACtC,IAAA,IAAIsB,OAAO,GAAGvB,gBAAgB,CAACpQ,OAAO,EAAEqQ,KAAK,CAAC,CAAA;MAC9C,IAAI,CAACI,IAAI,EAAE;EACTA,MAAAA,IAAI,GAAGkB,OAAO,CAAA;EAChB,KAAA;EACAjB,IAAAA,aAAa,GAAGiB,OAAO,CAAA;EACvBnB,IAAAA,KAAK,CAACxN,IAAI,CAAC2O,OAAO,CAAC,CAAA;EACrB,GAAA;;EAEA;IACA,SAASR,YAAY,CAACnR,OAAO,EAAE;EAC7B;EACA;EACA,IAAA,IAAI2R,OAAO,GAAGnB,KAAK,CAACjM,GAAG,EAAE,CAAA;EACzB;MACAmM,aAAa,GAAGF,KAAK,CAACA,KAAK,CAAClQ,MAAM,GAAG,CAAC,CAAC,CAAA;EACvC;EACA,IAAA,IAAIoQ,aAAa,EAAE;QACjBiB,OAAO,CAACjS,MAAM,GAAGgR,aAAa,CAAA;EAC9BA,MAAAA,aAAa,CAAC7G,QAAQ,CAAC7G,IAAI,CAAC2O,OAAO,CAAC,CAAA;EACtC,KAAA;EACF,GAAA;;EAEA;EACA,EAAA,OAAOlB,IAAI,CAAA;EACb;;ECrIA;EACA,IAAMmB,YAAY,GAAG,0BAA0B,CAAA;;EAE/C;EACO,SAASC,QAAQ,CAAC3Q,EAAE,EAAE;EAC3B,EAAA,SAAA;EACA,EAAA,IAAM2I,QAAQ,GAAGiI,WAAW,CAAC5Q,EAAE,CAAC,CAAA;IAChC,IAAM6Q,IAAI,GAAU7Q,MAAAA,CAAAA,MAAAA,CAAAA,EAAE,CAAC0I,GAAG,EAAK1I,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,EAAE,CAACmP,KAAK,CAAC/P,MAAM,GAAM0R,EAAAA,CAAAA,MAAAA,CAAAA,QAAQ,CAAC9Q,EAAE,CAACmP,KAAK,CAAC,CAAK,GAAA,WAAW,CACpFxG,CAAAA,MAAAA,CAAAA,QAAQ,GAAOA,GAAAA,CAAAA,MAAAA,CAAAA,QAAQ,CAAK,GAAA,EAAE,EAC7B,GAAA,CAAA,CAAA;EACH,EAAA,OAAOkI,IAAI,CAAA;EACb,CAAA;;EAEA;EACA,SAASD,WAAW,CAAC5Q,EAAE,EAAE;EACvB,EAAA,IAAM2I,QAAQ,GAAG3I,EAAE,CAAC2I,QAAQ,CAAA;IAC5B,IAAIA,QAAQ,CAACvJ,MAAM,EAAE;MACnB,IAAM2R,GAAG,GAAGC,OAAO,CAAA;EACnB,IAAA,OAAA,EAAA,CAAA,MAAA,CAAUrI,QAAQ,CAAC3J,GAAG,CAAC,UAACuL,CAAC,EAAA;QAAA,OAAKwG,GAAG,CAACxG,CAAC,CAAC,CAAA;EAAA,KAAA,CAAC,CAAC0G,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA;EACjD,GAAA;EACF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA,SAASD,OAAO,CAACE,IAAI,EAAE;EACrB;EACA,EAAA,IAAIA,IAAI,CAAC5S,IAAI,KAAK,CAAC,EAAE;MACnB,OAAOqS,QAAQ,CAACO,IAAI,CAAC,CAAA;EACvB,GAAC,MAAM;EACL;EACA,IAAA,IAAItI,IAAI,GAAGsI,IAAI,CAACtI,IAAI,CAAA;EACpB;EACA,IAAA,IAAI,CAAC8H,YAAY,CAACS,IAAI,CAACvI,IAAI,CAAC,EAAE;EAC5B,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaoB,IAAI,CAACC,SAAS,CAACrB,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACnC,KAAA;;EAEA;EACA,IAAA,IAAIwI,SAAS,GAAIV,YAAY,CAACU,SAAS,GAAG,CAAE,CAAA;MAC5C,IAAIC,MAAM,GAAG,EAAE,CAAA;MACf,IAAItB,KAAK,EAAE3N,KAAK,CAAA;MAEhB,OAAQ2N,KAAK,GAAGW,YAAY,CAACY,IAAI,CAAC1I,IAAI,CAAC,EAAG;EACxC;QACAxG,KAAK,GAAG2N,KAAK,CAAC3N,KAAK,CAAA;QACnB,IAAIA,KAAK,GAAGgP,SAAS,EAAE;EACrB;EACAC,QAAAA,MAAM,CAACvP,IAAI,CAACkI,IAAI,CAACC,SAAS,CAACrB,IAAI,CAACrG,KAAK,CAAC6O,SAAS,EAAEhP,KAAK,CAAC,CAAC,CAAC,CAAA;EAC3D,OAAA;EACA;QACAiP,MAAM,CAACvP,IAAI,CAAA,KAAA,CAAA,MAAA,CAAOiO,KAAK,CAAC,CAAC,CAAC,CAACwB,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;EACrC;QACAH,SAAS,GAAGhP,KAAK,GAAG2N,KAAK,CAAC,CAAC,CAAC,CAAC3Q,MAAM,CAAA;EACrC,KAAA;;EAEA;EACA,IAAA,IAAIgS,SAAS,GAAGxI,IAAI,CAACxJ,MAAM,EAAE;EAC3BiS,MAAAA,MAAM,CAACvP,IAAI,CAACkI,IAAI,CAACC,SAAS,CAACrB,IAAI,CAACrG,KAAK,CAAC6O,SAAS,CAAC,CAAC,CAAC,CAAA;EACpD,KAAA;;EAEA;EACA,IAAA,OAAA,KAAA,CAAA,MAAA,CAAaC,MAAM,CAACJ,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,GAAA;EACF,CAAA;;EAEA;EACA,SAASH,QAAQ,CAAC/J,KAAK,EAAE;EACvB,EAAA,IAAIyK,WAAW,GAAK,EAAA,CAAA;IAAC,IACkB,KAAA,GAAA,SAAA,KAAA,GAAA;EACrC,IAAA,IAAMC,IAAI,GAAG1K,KAAK,CAAC5H,CAAC,CAAC,CAAA;EACrB;EACA,IAAA,IAAIsS,IAAI,CAACpI,IAAI,KAAK,OAAO,EAAE;QACzB,IAAIpM,GAAG,GAAG,EAAE,CAAA;EACZwU,MAAAA,IAAI,CAACzN,KAAK,CAAC9E,KAAK,CAAC,GAAG,CAAC,CAAClB,OAAO,CAAC,UAACmK,IAAI,EAAK;EACtC,QAAA,IAAA,WAAA,GAAmBA,IAAI,CAACjJ,KAAK,CAAC,GAAG,CAAC;EAAA,UAAA,YAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;YAA7B7B,GAAG,GAAA,YAAA,CAAA,CAAA,CAAA;YAAE2G,KAAK,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA;EACf/G,QAAAA,GAAG,CAACI,GAAG,CAAC,GAAG2G,KAAK,CAAA;EAClB,OAAC,CAAC,CAAA;QACFyN,IAAI,CAACzN,KAAK,GAAG/G,GAAG,CAAA;EAClB,KAAA;EACA,IAAA,IAAM+G,KAAK,GAAG0N,aAAa,CAACD,IAAI,CAACzN,KAAK,CAAC,CAAA;EACvCwN,IAAAA,WAAW,gBAAQC,IAAI,CAACpI,IAAI,EAAA,KAAA,CAAA,CAAA,MAAA,CAAKrF,KAAK,EAAG,GAAA,CAAA,CAAA;KAC1C,CAAA;EAbD,EAAA,KAAK,IAAI7E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4H,KAAK,CAAC3H,MAAM,EAAED,CAAC,EAAE,EAAA;EAAA,IAAA,KAAA,EAAA,CAAA;EAAA,GAAA;IAcrCqS,WAAW,GAAA,GAAA,CAAA,MAAA,CAAOA,WAAW,CAACjP,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAG,GAAA,CAAA,CAAA;EAC7C,EAAA,OAAOiP,WAAW,CAAA;EACpB,CAAA;EAEA,SAASE,aAAa,CAAC1N,KAAK,EAAE;EAC5B,EAAA,OAAOgG,IAAI,CAACC,SAAS,CAACjG,KAAK,CAAC,CAAA;EAC9B;;ECvFA;EACO,SAAS2N,kBAAkB,CAACC,QAAQ,EAAE;EAC3C;EACA;EACA,EAAA,IAAMC,GAAG,GAAGzC,KAAK,CAACwC,QAAQ,CAAC,CAAA;;EAE3B;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,EAAA,IAAMf,IAAI,GAAGF,QAAQ,CAACkB,GAAG,CAAC,CAAA;;EAE1B;EACA,EAAA,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAA,oBAAA,CAAA,MAAA,CAAsBlB,IAAI,EAAI,GAAA,CAAA,CAAA,CAAA;EAC3D,EAAA,SAAA;EACA,EAAA,OAAOiB,QAAQ,CAAA;EACjB;;ECtCA,IAAME,KAAK,GAAG1S,GAAG,CAACC,SAAS,CAACmK,MAAM,CAAA;EAClC;EACApK,GAAG,CAACC,SAAS,CAACmK,MAAM,GAAG,UAAU1J,EAAE,EAAE;EACnCA,EAAAA,EAAE,GAAGA,EAAE,IAAIwL,KAAK,CAACxL,EAAE,CAAC,CAAA;EACpB,EAAA,IAAMtB,OAAO,GAAG,IAAI,CAAC4B,QAAQ,CAAA;EAC7B,EAAA,SAAA;;EAEA;EACA;EACA,EAAA,IAAI,CAAC5B,OAAO,CAACiM,MAAM,EAAE;EACnB,IAAA,IAAIiH,QAAQ,GAAGlT,OAAO,CAACkT,QAAQ,CAAA;EAC/B,IAAA,IAAIA,QAAQ,EAAE,CAEb,MAAM,IAAI5R,EAAE,EAAE;EACb;EACA;EACA4R,MAAAA,QAAQ,GAAGK,YAAY,CAACjS,EAAE,CAAC,CAAA;EAC7B,KAAA;EACA,IAAA,IAAI4R,QAAQ,EAAE;EACZ;EACA,MAAA,IAAMjH,MAAM,GAAGgH,kBAAkB,CAACC,QAAQ,CAAC,CAAA;QAC3ClT,OAAO,CAACiM,MAAM,GAAGA,MAAM,CAAA;EACzB,KAAA;EACF,GAAA;EACA,EAAA,OAAOqH,KAAK,CAACzR,IAAI,CAAC,IAAI,EAAEP,EAAE,CAAC,CAAA;EAC7B,CAAC,CAAA;EAED,SAASiS,YAAY,CAACjS,EAAE,EAAE;IACxB,IAAIA,EAAE,CAACkS,SAAS,EAAE;MAChB,OAAOlS,EAAE,CAACkS,SAAS,CAAA;EACrB,GAAC,MAAM;EACL,IAAA,IAAMC,SAAS,GAAG/Q,QAAQ,CAACuI,aAAa,CAAC,KAAK,CAAC,CAAA;MAC/CwI,SAAS,CAAC9F,WAAW,CAACrM,EAAE,CAACoS,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;MACzC,OAAOD,SAAS,CAACzD,SAAS,CAAA;EAC5B,GAAA;EACF;;;;;;;;"}